{"version":3,"sources":["webpack:///./docs/components/docs/components/importdoc.vue"],"names":[],"mappings":"AAmGA,oBACA,e","file":"49364e1c8c0d5e005b06.css","sourcesContent":["<template>\n  <section\n    class=\"bd-content\"\n    v-if=\"components.length > 0 || directives.length > 0\">\n\n    <article v-if=\"components.length > 0\">\n      <h3>Importing Individual Components</h3>\n      <b-table\n        :items=\"componentImports\"\n        small\n        head-variant=\"default\"\n        striped>\n        <template\n          slot=\"component\"\n          slot-scope=\"field\">\n          <code>{{ field.value }}</code>\n        </template>\n        <template\n          slot=\"import_path\"\n          slot-scope=\"field\">\n          <code>{{ field.value }}</code>\n        </template>\n      </b-table>\n      <p><strong>Example:</strong></p>\n      <b-card\n        no-body\n        tag=\"p\">\n        <code>import {{ components[0] }} from '{{ componentImports[0].import_path }}';</code>\n        <br>\n        <code>Vue.component('{{ componentName(components[0]) }}', {{ components[0] }});</code>\n      </b-card>\n    </article>\n\n    <article v-if=\"directives.length > 0\">\n      <h3>Importing Individual Directives</h3>\n      <b-table\n        :items=\"directiveImports\"\n        small\n        head-variant=\"default\"\n        striped>\n        <template\n          slot=\"directive\"\n          slot-scope=\"field\">\n          <code>{{ field.value }}</code>\n        </template>\n        <template\n          slot=\"import_path\"\n          slot-scope=\"field\">\n          <code>{{ field.value }}</code>\n        </template>\n      </b-table>\n      <p><strong>Example:</strong></p>\n      <b-card\n        no-body\n        tag=\"p\">\n        <code>import {{ directives[0] }} from '{{ directiveImports[0].import_path }}';</code>\n        <br>\n        <code>Vue.directive('{{ directiveName(directives[0]) }}', {{ directives[0] }});</code>\n        <br>\n        <code>// Note Vue automatically prefixes the directive name with 'v-'</code>\n      </b-card>\n    </article>\n\n    <article class=\"pb-5\">\n      <h3>Importing {{ pluginTitle }} as a Vue plugin</h3>\n      <p v-if=\"$route.name === 'docs-components-slug'\">\n        This plugin includes all of the above listed individual\n        components<span v-if=\"directives.length\"> and directives</span>.\n        Plugins also include any component aliases.\n      </p>\n      <p v-else>\n        This plugin includes all of the above listed individual directives.\n      </p>\n      <b-card\n        no-body\n        tag=\"p\">\n        <code v-if=\"$route.name === 'docs-components-slug'\">\n          import { {{ pluginName }} } from 'bootstrap-vue/es/components';\n        </code>\n        <code v-else>\n          import { {{ pluginName }} } from 'bootstrap-vue/es/directives';\n        </code>\n        <br>\n        <code>Vue.use({{ pluginName }});</code>\n      </b-card>\n      <template v-if=\"meta.plugins && meta.plugins.length > 0\">\n        <p>This plugin also automatically includes the following plugins:</p>\n        <ul>\n          <li\n            v-for=\"plugin in meta.plugins\"\n            :key=\"plugin\"><code>{{ plugin }}</code></li>\n        </ul>\n      </template>\n    </article>\n\n  </section>\n</template>\n\n<style scoped>\n    h3 {\n        padding: 20px 0;\n    }\n</style>\n\n<script>\nimport kebabCase from 'lodash/kebabCase'\nimport startCase from 'lodash/startCase'\nexport default {\n  props: {\n    meta: {}\n  },\n  computed: {\n    pluginName () {\n      return startCase(this.$route.params.slug).replace(/\\s+/g, '')\n    },\n    pluginTitle () {\n      return startCase(this.meta.title)\n    },\n    componentImports () {\n      return this.components.map(c => {\n        return {\n          component: this.componentTag(c),\n          import_path: this.componentPath(c)\n        }\n      })\n    },\n    directiveImports () {\n      return this.directives.map(d => {\n        return {\n          directive: this.directiveAttr(d),\n          import_path: this.directivePath(d)\n        }\n      })\n    },\n    components () {\n      return [].concat(this.meta.component, this.meta.components).filter(c => c)\n    },\n    directives () {\n      return [].concat(this.meta.directive, this.meta.directives).filter(d => d)\n    }\n  },\n  methods: {\n    componentName (component) {\n      return kebabCase(component)\n    },\n    componentTag (component) {\n      return `<${kebabCase(component)}>`\n    },\n    componentPath (component) {\n      return `bootstrap-vue/es/components/${this.$route.params.slug}/${kebabCase(component).replace(/^b-/, '')}`\n    },\n    directiveName (directive) {\n      return kebabCase(directive).replace(/^v-/, '')\n    },\n    directiveAttr (directive) {\n      return kebabCase(directive)\n    },\n    directivePath (directive) {\n      const slug = kebabCase(directive).replace(/^v-b-/, '')\n      return `bootstrap-vue/es/directives/${slug}/${slug}`\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}