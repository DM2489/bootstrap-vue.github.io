webpackJsonp([48],{zlBX:function(s,a){s.exports='<h1 id=dropdowns>Dropdowns</h1> <blockquote> <p>Dropdowns are toggleable, contextual overlays for displaying lists of links and actions in a dropdown menu format.</p> </blockquote> <p><code>&lt;b-dropdown&gt;</code> (or known by its shorter alias of <code>&lt;b-dd&gt;</code>) components are toggleable, contextual overlays for displaying lists of links and more. They&#x2019;re toggled by clicking (or pressing space or enter when focused), not by hovering; this is an <a href=http://markdotto.com/2012/02/27/bootstrap-explained-dropdowns/ >intentional design decision</a>.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown1&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Dropdown Button&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-md-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span>&gt;</span>First Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span>&gt;</span>Second Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span>&gt;</span>Third Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-divider</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-divider</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>disabled</span>&gt;</span>Disabled action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown.vue --&gt;</span>\n</pre> <h2 id=dropdown-supported-sub-components>Dropdown supported sub-components</h2> <p>The following components can be placed inside of your dropdowns. Using any other component or markup may break lauout and/or keyboard navigation.</p> <table class="table b-table table-sm table-striped"> <thead class=thead-default> <tr> <th>Sub-component</th> <th>Description</th> <th>Aliases</th> </tr> </thead> <tbody> <tr> <td><code>&lt;b-dropdown-item&gt;</code></td> <td>Action items that provide click, link, and <code>&lt;router-link&gt;</code> functionality. renders as an <code>&lt;a&gt;</code> element by default.</td> <td><code>&lt;b-dd-item&gt;</code></td> </tr> <tr> <td><code>&lt;b-dropdown-item-button&gt;</code></td> <td>An alternative to <code>&lt;b-dropdown-item&gt;</code> that renders a menu item using a <code>&lt;button&gt;</code> element.</td> <td><code>&lt;b-dropdown-item-btn&gt;</code>, <code>&lt;b-dd-item-button&gt;</code>, <code>&lt;b-dd-item-btn&gt;</code></td> </tr> <tr> <td><code>&lt;b-dropdown-header&gt;</code></td> <td>A header item, used to help identify a group of dropdown items.</td> <td><code>&lt;b-dd-header&gt;</code></td> </tr> <tr> <td><code>&lt;b-dropdown-divider&gt;</code></td> <td>A divider / spacer which can be used to separate dropdown items.</td> <td><code>&lt;b-dd-divider&gt;</code></td> </tr> </tbody> </table> <p><strong>Note:</strong> <em>Nested sub-menus are <strong>not</strong> supported.</em></p> <h3 id=-b-dropdown-item-><code>&lt;b-dropdown-item&gt;</code></h3> <p>The <code>&lt;b-dropdown-item&gt;</code> is typically used to create a navigation link inside your menu. Use either the <code>href</code> prop or the <code>to</code> prop (for router link support) to generate the apropriate navigation link. IF neither <code>href</code> nor <code>to</code> are provided, a standard <code>&lt;a&gt;</code> link will be generated with an <code>href</code> of <code>#</code> (with an event hander that will prevent scroll to top behaviour by preventing the default link action).</p> <p>Disabled the dropdown item by setting the <code>disabled</code> prop.</p> <h3 id=-b-dropdown-item-button-><code>&lt;b-dropdown-item-button&gt;</code></h3> <p>Historically dropdown menu contents had to be links (<code>&lt;b-dropdown-item&gt;</code>), but that&#x2019;s no longer the case with Bootstrap v4. Now you can optionally create <code>&lt;button&gt;</code> elements in your dropdowns by using the <code>&lt;b-dropdown-item-button&gt;</code> sub-component. <code>&lt;b-dropdown-itmem-button&gt;</code> does not support the <code>href</code> or <code>to</code> props.</p> <p>Disabled the dropdown item button by setting the <code>disabled</code> prop.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-buttons&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Dropdown using buttons as menu items&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>I&apos;m a button<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>I&apos;m also a button<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span> <span class=hljs-attr>disabled</span>&gt;</span>I&apos;m a button, but disabled!<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>I don&apos;t look like a button, but I am!<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-item-buttons.vue --&gt;</span>\n</pre> <p>When the menu item doesn&apos;t trigger navigation, it is reccomended to use the <code>&lt;b-dropdown-item-button&gt;</code> sub-component</p> <h3 id=-b-dropdown-item-divider-><code>&lt;b-dropdown-item-divider&gt;</code></h3> <p>Separate groups of related menu items with <code>&lt;b-dropdown-divider&gt;</code>.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-divider&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Dropdown with divider&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>First item<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Second item<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-divider</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-divider</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Separated Item<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-item-divider.vue --&gt;</span>\n</pre> <h3 id=-b-dropdown-item-header-><code>&lt;b-dropdown-item-header&gt;</code></h3> <p>Add a header to label sections of actions in any dropdown menu.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-header&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Dropdown with header&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-header</span>&gt;</span>Dropdown header<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-header</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>First item<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Second Item<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-item-header.vue --&gt;</span>\n</pre> <p>See Section <a href=#dropdown-headers-and-accessibility>Dropdown headers and accessibility</a> for details on making headers more accessible for users of assistive technologies.</p> <h2 id=positioning>Positioning</h2> <p>Dropdown supports various positioning such as left and right aligned, drodown and dropup, and supports auto-flipping (dropdown to dropup, and vice-versa) when the menu would overflow off of the visible screen area.</p> <h3 id=menu-left-and-right-alignment>Menu left and right alignment</h3> <p>The dropdown menu can either be left aligned (default) or right aligned with respect to the button above it. To have the dropdown aligned on the right, set the <code>right</code> prop.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-left&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Left align&quot;</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>&quot;primary&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-right&quot;</span> <span class=hljs-attr>right</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Right align&quot;</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>&quot;primary&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-right.vue --&gt;</span>\n</pre> <h3 id=dropup>Dropup</h3> <p>Turn your dropdown menu into a drop-up menu by setting the <code>dropup</code> prop.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-dropup&quot;</span> <span class=hljs-attr>dropup</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Drop-Up&quot;</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>&quot;info&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-dropup.vue --&gt;</span>\n</pre> <h3 id=auto-flipping->Auto &quot;flipping&quot;</h3> <p>By default, dropdowns may flip to the top, or to the bottom, based on their current position in the viewport. To disable this auto-flip feature, set the <code>no-flip</code> prop.</p> <h3 id=menu-offset>Menu offset</h3> <p>Like to move your menu away from the toggle buttons a bit? Then use the <code>offset</code> prop to specify the number of pixels to push right (or left when negative) from the toggle button:</p> <ul> <li>Specified as a number of pixels: positive for right shift, negative for left shift.</li> <li>Specify the distance in CSS units (i.e. <code>0.3rem</code>, <code>4px</code>, <code>1.2em</code>, etc) passed as a string.</li> </ul> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-offset&quot;</span> <span class=hljs-attr>offset</span>=<span class=hljs-string>&quot;25&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Offset Dropdown&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-offset.vue --&gt;</span>\n</pre> <h2 id=split-button-support>Split button support</h2> <p>Create a split dropdown button, where the left button provides standard <code>click</code> event support, while the right hand side is the dropdown menu toggle button.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-split&quot;</span> <span class=hljs-attr>split</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Split Dropdown&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-split.vue --&gt;</span>\n</pre> <h2 id=hidden-caret>Hidden Caret</h2> <p>The dropdown can be created with the caret hidden by setting the <code>no-caret</code> prop to <code>true</code>. This is useful when the dropdown is to be displayed as an icon.</p> <p><strong>Note:</strong> The caret will always be shown when using <code>split</code> mode.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>&quot;link&quot;</span> <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;lg&quot;</span> <span class=hljs-attr>no-caret</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>template</span> <span class=hljs-attr>slot</span>=<span class=hljs-string>&quot;button-content&quot;</span>&gt;</span>\n      &amp;#x1f50d;<span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;sr-only&quot;</span>&gt;</span>Search<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item</span> <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;#&quot;</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-hidden-toggle.vue --&gt;</span>\n</pre> <h2 id=sizing>Sizing</h2> <p>Dropdowns work with trigger buttons of all sizes, including default and split dropdown buttons.</p> <p>Set the <code>size</code> prop to either <code>sm</code> for small button(s), or <code>lg</code> for large button(s).</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-lg&quot;</span> <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;lg&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Large&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Something else here<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-lg-split&quot;</span> <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;lg&quot;</span> <span class=hljs-attr>split</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Large Split&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-sm&quot;</span> <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;sm&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Small&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-sm-split&quot;</span> <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;sm&quot;</span> <span class=hljs-attr>split</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Small Split&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Another action<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Something else here...<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-sizes.vue --&gt;</span>\n</pre> <p><strong>Note:</strong> <em>changing the size of the button(s) does not affect the size of the menu items!</em></p> <h2 id=dropdown-color-variants>Dropdown color variants</h2> <p>The dropdown trigger buttons can have one of the standard Boostrap contextual variants applied by setting the prop <code>variant</code> to <code>success</code>, <code>primary</code>, <code>info</code>, <code>danger</code>, <code>link</code> etc.</p> <p>See the <a href=/docs/reference/variants>Variant Reference</a> for a list of supported contextual variants.</p> <h2 id=accessibility>Accessibility</h2> <p>Providing a unique <code>id</code> prop ensures ARIA compliance by automatically adding the appropriate <code>aria-*</code> attributes in the rendered markup.</p> <p>The default ARIA role is set to <code>menu</code>, but you can change this default to another role (such as <code>navigation</code>) via the <code>role</code> prop, depending on your user case.</p> <p>When a menu item doesn&apos;t trigger navigation, it is reccomended to use the <code>&lt;b-dropdown-item-button&gt;</code> sub-component (which is not announced as a link) instead of <code>&lt;b-dropdown-item&gt;</code> (which is presented as a link to the user).</p> <h3 id=dropdown-headers-and-accessibility>Dropdown headers and accessibility</h3> <p>When using <code>&lt;b-dropdown-header&gt;</code> components in the dropdown menu, it is recommended to add an <code>id</code> attribute to each of the headers, and then set the <code>aria-describedby</code> attribute (set to the <code>id</code> value of the associated header) on each following dropdown items under that header. To improve on this, wrap the header and related menu items in a <code>&lt;div&gt;</code> with <code>role=&quot;group&quot;</code>. This will provide users of assistive technologies (i.e. sight-impaired users) additional context about the dropdown item:</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;ddown-aria&quot;</span> <span class=hljs-attr>text</span>=<span class=hljs-string>&quot;Dropdown ARIA&quot;</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>&quot;primary&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;m-2&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>role</span>=<span class=hljs-string>&quot;group&quot;</span> <span class=hljs-attr>aria-lableledby</span>=<span class=hljs-string>&quot;header1&quot;</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-header</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;header1&quot;</span>&gt;</span>Groups<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-header</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span> <span class=hljs-attr>aria-describedby</span>=<span class=hljs-string>&quot;header1&quot;</span>&gt;</span>Add<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span> <span class=hljs-attr>aria-describedby</span>=<span class=hljs-string>&quot;header1&quot;</span>&gt;</span>Delete<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>role</span>=<span class=hljs-string>&quot;group&quot;</span> <span class=hljs-attr>aria-lableledby</span>=<span class=hljs-string>&quot;header2&quot;</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-header</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;header2&quot;</span>&gt;</span>Users<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-header</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span> <span class=hljs-attr>aria-describedby</span>=<span class=hljs-string>&quot;header2&quot;</span>&gt;</span>Add<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span> <span class=hljs-attr>aria-describedby</span>=<span class=hljs-string>&quot;header2&quot;</span>&gt;</span>Delete<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-divider</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-divider</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>Something <span class=hljs-tag>&lt;<span class=hljs-name>strong</span>&gt;</span>not<span class=hljs-tag>&lt;/<span class=hljs-name>strong</span>&gt;</span> associated with user<span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown-item-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-dropdown</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- dropdown-aria.vue --&gt;</span>\n</pre> <h3 id=dropdown-keyboard-navigation>Dropdown keyboard navigation</h3> <p>Dropdowns support keyboard navigation, emulating native <code>&lt;select&gt;</code> behaviour.</p> <table class="table b-table table-sm table-striped"> <thead class=thead-default> <tr> <th>Keypress</th> <th>Action</th> </tr> </thead> <tbody> <tr> <td><kbd>DOWN</kbd></td> <td>Will highlight the next lower non-disabled item in the menu.</td> </tr> <tr> <td><kbd>UP</kbd></td> <td>Will highlight the next higher non-disabled item in the menu.</td> </tr> <tr> <td><kbd>ENTER</kbd> or <kbd>SPACE</kbd></td> <td>Will click the highlighted menu item.</td> </tr> <tr> <td><kbd>ESC</kbd></td> <td>Will close the dropdown and return focus to the trigger button.</td> </tr> <tr> <td><kbd>TAB</kbd></td> <td>Will close the dropdown and jump to the next focusable control on the page.</td> </tr> <tr> <td><kbd>SHIFT</kbd>+<kbd>TAB</kbd></td> <td>Will close the dropdown and jump to the previous focusable control on the page.</td> </tr> </tbody> </table> <h2 id=dropdown-component-aliases>Dropdown component aliases</h2> <ul> <li><code>&lt;b-dropdown&gt;</code> can be used via it&apos;s shorter alias of <code>&lt;b-dd&gt;</code></li> <li><code>&lt;b-dropdown-item&gt;</code> can be used via it&apos;s shorter alias of <code>&lt;b-dd-item&gt;</code></li> <li><code>&lt;b-dropdown-item-button&gt;</code> can be used by the shorter aliases <code>&lt;b-dropdown-item-btn&gt;</code>, <code>&lt;b-dd-item-button&gt;</code> and <code>&lt;b-dd-item-btn&gt;</code></li> <li><code>&lt;b-dropdown-header&gt;</code> can be used via it&apos;s shorter alias of <code>&lt;b-dd-header&gt;</code></li> <li><code>&lt;b-dropdown-divider&gt;</code> can be used via it&apos;s shorter alias of <code>&lt;b-dd-divider&gt;</code></li> </ul> <h2 id=implementation-note>Implementation Note</h2> <p>On touch-enabled devices, opening a <code>&lt;b-dropdown&gt;</code> adds empty (noop) <code>mouseover</code> handlers to the immediate children of the <code>&lt;body&gt;</code> element. This admittedly ugly hack is necessary to work around a <a href=https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html>quirk in iOS&#x2019; event delegation</a>, which would otherwise prevent a tap anywhere outside of the dropdown from triggering the code that closes the dropdown. Once the dropdown is closed, these additional empty <code>mouseover</code> handlers are removed.</p> <h2 id=component-reference>Component Reference</h2> '}});
//# sourceMappingURL=48.ba9dcc82d798ff5a1dbd.js.map