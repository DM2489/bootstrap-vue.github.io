(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{360:function(s,n){s.exports='<h1 id="links">Links</h1>\n<blockquote>\n<p>Use Bootstrap-Vue&#x2019;s custom <code>b-link</code> component for generating a standard <code>&lt;a&gt;</code> link or\n<code>&lt;router-link&gt;</code>. <code>&lt;b-link&gt;</code> supports the <code>disabled</code> state and <code>click</code> event propagation.</p>\n</blockquote>\n<p><code>&lt;b-link&gt;</code> is the building block for most Bootstrap-Vue components that offer link functionality.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">b-link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#foo&quot;</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-link</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- link-example.vue --&gt;</span>\n</pre>\n<h2 id="link-type">Link type</h2>\n<p>By specifying a value in the <code>href</code> prop, a standard link (<code>&lt;a&gt;</code>) element will be rendered.\nTo generate a <code>&lt;router-link&gt;</code> instead, specify the route location via the <code>to</code> prop.</p>\n<p>Router links support various additional props.  Refer to the <a href="/docs/reference/router-links">Router support</a>\nreference section for details.</p>\n<h2 id="links-with-href-">Links with href=&quot;#&quot;</h2>\n<p>Typically <code>&lt;a href=&quot;#&quot;&gt;</code> will cause the document to scroll to the top of page when clicked.\n<code>&lt;b-link&gt;</code> addresses this by preventing the default action (scroll to top) when <code>href</code> is set to <code>#</code>.</p>\n<h2 id="link-disabled-state">Link disabled state</h2>\n<p>Disable link functionality by setting the <code>disabled</code> prop to true.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">b-link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#foo&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-link</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- link-disabled.vue --&gt;</span>\n</pre>\n<p>Disabling a link will set the Bootstrap V4 <code>.disabled</code> class on the link\nas well as handles stoping event propegation, preventing the default action\nfrom occuring, and removing the link from the document tab sequence.</p>\n<p><strong>Note:</strong> Boostrap V4 CSS currently does not style disabled links differently than\nnon-disabled links. You can use the following custom CSS to style disabled links\n(by preventing hover style changes):</p>\n<pre class="hljs"><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.disabled</span> {\n  <span class="hljs-attribute">pointer-events</span>: none;\n}\n</pre>\n<h2 id="component-reference">Component Reference</h2>\n'}}]);