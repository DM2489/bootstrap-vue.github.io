{"version":3,"sources":["/usr/src/app/src/components/table/README.md"],"names":["module","exports"],"mappings":"sCAAAA,EAAAC,QAAA","file":"docs/components33.71c0bd0b11ed1edb4e00.js","sourcesContent":["module.exports = \"<h1 id=\\\"tables\\\">Tables</h1>\\n<blockquote>\\n<p>For displaying tabular data. <code>&lt;b-table&gt;</code> supports pagination, filtering, sorting,\\ncustom rendering, events, and asynchronous data.</p>\\n</blockquote>\\n<p><strong>Example: Basic usage</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">striped</span> <span class=\\\"hljs-attr\\\">hover</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">const</span> items = [\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n]\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">items</span>: items\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-basic-1.vue --&gt;</span>\\n</pre>\\n<h2 id=\\\"items-record-data-\\\">Items (record data)</h2>\\n<p><code>items</code> is the table data in array format, where each record (row) data are\\nkeyed objects. Example format:</p>\\n<pre class=\\\"hljs\\\">[\\n    { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">32</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Cyndi&apos;</span> },\\n    { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">27</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Havij&apos;</span> },\\n    { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">42</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Robert&apos;</span> }\\n]\\n</pre>\\n<p><code>&lt;b-table&gt;</code> automatically samples the first row to extract field names (they keys in the\\nrecord data). Field names are automatically &quot;humanized&quot; by converting <code>kebab-case</code>, <code>snake_case</code>,\\nand <code>camelCase</code> to individual words and capitalizes each word. Example conversions:</p>\\n<ul>\\n<li><code>first_name</code> becomes <code>First Name</code></li>\\n<li><code>last-name</code> becomes <code>Last Name</code></li>\\n<li><code>age</code> becoms <code>Age</code></li>\\n<li><code>YEAR</code> remains <code>YEAR</code></li>\\n<li><code>isActive</code> becomes <code>Is Active</code></li>\\n</ul>\\n<p>These titles wil be displayed in the table header, in the order they appear in the\\n<strong>first</strong> record of data. See the <a href=\\\"#fields-column-definitions-\\\"><strong>Fields</strong></a> section\\nbelow for customizing how field headings appear.</p>\\n<blockquote>\\n<p><strong>Note:</strong> <em>Field order is not guaranteed. Fields will typically appear in the order they\\nwere defined in the first row, but this may not always be the case depending on the version\\nof browser in use. See section <a href=\\\"#fields-column-definitions-\\\"><strong>Fields (column definitions)</strong></a>\\nbelow to see how to guarantee the order of fields.</em></p>\\n</blockquote>\\n<p>Record data may also have additional special reserved name keys for colorizing\\nrows and individual cells (variants), and for triggering additional row detail. The supported\\noptional item record modifier properties (make sure your field keys do not conflict with\\nthese names):</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>_cellVariants</code></td>\\n<td>Object</td>\\n<td>Bootstrap contextual state applied to individual cells. Keyed by field (Supported values: <code>active</code>, <code>success</code>, <code>info</code>, <code>warning</code>, <code>danger</code>)</td>\\n</tr>\\n<tr>\\n<td><code>_rowVariant</code></td>\\n<td>String</td>\\n<td>Bootstrap contextual state applied to the entire row (Supported values: <code>active</code>, <code>success</code>, <code>info</code>, <code>warning</code>, <code>danger</code>)</td>\\n</tr>\\n<tr>\\n<td><code>_showDetails</code></td>\\n<td>Boolean</td>\\n<td>Used to trigger the display of the <code>row-details</code> scoped slot. See section <a href=\\\"#row-details-support\\\">Row details support</a> below for additional information</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example: Using variants for table cells</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">hover</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">const</span> items = [\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n  {\\n    <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n    <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>,\\n    <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>,\\n    <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span>,\\n    <span class=\\\"hljs-attr\\\">_rowVariant</span>: <span class=\\\"hljs-string\\\">&apos;danger&apos;</span>\\n  },\\n  {\\n    <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>,\\n    <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>,\\n    <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Thor&apos;</span>,\\n    <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span>,\\n    <span class=\\\"hljs-attr\\\">_cellVariants</span>: { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-string\\\">&apos;success&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-string\\\">&apos;info&apos;</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;warning&apos;</span> }\\n  },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">29</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dick&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Dunlap&apos;</span> }\\n]\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">items</span>: items\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-variants-1.vue --&gt;</span>\\n</pre>\\n<p><code>items</code> can also be a reference to a <em>provider</em> function, which returns an\\n<code>Array</code> of items data. Provider functions can also be asynchronous:</p>\\n<ul>\\n<li>By returning <code>null</code> (or <code>undefined</code>) and calling a callback, when the data is\\nready, with the data array as the only argument to the callback,</li>\\n<li>By returning a <code>Promise</code> that resolves to an array.</li>\\n</ul>\\n<p>See the <a href=\\\"#using-items-provider-functions\\\"><strong>&quot;Using Items Provider functions&quot;</strong></a>\\nsection below for more details.</p>\\n<h2 id=\\\"fields-column-definitions-\\\">Fields (column definitions)</h2>\\n<p>The <code>fields</code> prop is used to customize the table columns headings,\\nand in which order the columns of data are displayed. The field object keys\\n(i.e. <code>age</code> or <code>first_name</code> as shown below) are used to extract the value from\\neach item (record) row, and to provide additional fetures such as enabling\\n<a href=\\\"#sorting\\\"><strong>sorting</strong></a> on the column, etc.</p>\\n<p>Fields can be provided as a <em>simple array</em>, an <em>array of objects</em>, or an\\n<em>object</em>. <strong>Internally the fields data will be normalized into the <em>array of\\nobjects</em> format</strong>. Events or slots that include the column <code>field</code> data will be\\nin the normalized field object format (array of objects for <code>fields</code>, or an\\nobject for an individual <code>field</code>).</p>\\n<h3 id=\\\"fields-as-a-simple-array\\\">Fields as a simple array</h3>\\n<p>Fields can be a simple array, for defining the order of the columns, and\\nwhich columns to display (order is guaranteed):</p>\\n<p><strong>Example: Using <code>array</code> fields definition</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">striped</span> <span class=\\\"hljs-attr\\\">hover</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-comment\\\">// Note &apos;isActive&apos; is left out and will not appear in the rendered table</span>\\n      fields: [ <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;age&apos;</span> ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-fields-array.vue --&gt;</span>\\n</pre>\\n<h3 id=\\\"fields-as-an-array-of-objects\\\">Fields as an array of objects</h3>\\n<p>Fields can be a an array of objects, providing additional control over the fields (such\\nas sorting, formatting, etc). Only columns (keys) that appear in the fields array will\\nbe shown (order is guaranteed):</p>\\n<p><strong>Example: Using array of objects fields definition</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">striped</span> <span class=\\\"hljs-attr\\\">hover</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-comment\\\">// Note &apos;isActive&apos; is left out and will not appear in the rendered table</span>\\n      fields: [\\n        {\\n          <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">false</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person age&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span>,\\n          <span class=\\\"hljs-comment\\\">// Variant applies to the whole column, including the header and footer</span>\\n          variant: <span class=\\\"hljs-string\\\">&apos;danger&apos;</span>\\n        }\\n      ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-fields-array-of-objects.vue --&gt;</span>\\n</pre>\\n<h3 id=\\\"fields-as-an-object\\\">Fields as an object</h3>\\n<p>Also, fields can be a an object providing similar control over the fields as the\\n<em>array of objects</em> above does. Only columns listed in the fields object will be shown.\\nThe order of the fields will typically be in the order they were defined in the object,\\nalthough <strong>order is not guaranteed</strong>:</p>\\n<p><strong>Example: Using object fields definition</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">striped</span> <span class=\\\"hljs-attr\\\">hover</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-comment\\\">// Note &apos;isActive&apos; is left out and will not appear in the rendered table</span>\\n      fields: {\\n        <span class=\\\"hljs-attr\\\">last_name</span>: {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person last name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span>\\n        },\\n        <span class=\\\"hljs-attr\\\">first_name</span>: {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person first name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">false</span>\\n        },\\n        <span class=\\\"hljs-attr\\\">foo</span>: {\\n          <span class=\\\"hljs-comment\\\">// This key overrides `foo`!</span>\\n          key: <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person age&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span>\\n        }\\n      },\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-fields-object.vue --&gt;</span>\\n</pre>\\n<blockquote>\\n<p><strong>Note:</strong> <em>if a <code>key</code> property is defined in the field definition, it will take\\nprecidence over the key used to define the field.</em></p>\\n</blockquote>\\n<h3 id=\\\"field-definition-reference\\\">Field definition reference</h3>\\n<p>The following field properties are recognized:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>key</code></td>\\n<td>String</td>\\n<td>The key for selecting data from the record in the items array. Required when passing the props <code>fields</code> an array of objects.</td>\\n</tr>\\n<tr>\\n<td><code>label</code></td>\\n<td>String</td>\\n<td>Appears in the columns table header (and footer if <code>foot-clone</code> is set). Defaults to the field&apos;s key (in humanized format) if not provided.</td>\\n</tr>\\n<tr>\\n<td><code>class</code></td>\\n<td>String or Array</td>\\n<td>Class name (or array of class names) to add to <code>&lt;th&gt;</code> <strong>and</strong> <code>&lt;td&gt;</code> in the column.</td>\\n</tr>\\n<tr>\\n<td><code>formatter</code></td>\\n<td>String or Function</td>\\n<td>A formatter callback function, can be used instead of (or in conjunction with) slots for real table fields (i.e. fields, that have corresponding data at items array). Refer to <a href=\\\"#custom-data-rendering\\\"><strong>Custom Data Rendering</strong></a> for more details.</td>\\n</tr>\\n<tr>\\n<td><code>sortable</code></td>\\n<td>Boolean</td>\\n<td>Enable sorting on this column. Refer to the <a href=\\\"#sorting\\\"><strong>Sorting</strong></a> Section for more details.</td>\\n</tr>\\n<tr>\\n<td><code>tdClass</code></td>\\n<td>String or Array</td>\\n<td>Class name (or array of class names) to add to <code>&lt;tbody&gt;</code> data <code>&lt;td&gt;</code> cells in the column.</td>\\n</tr>\\n<tr>\\n<td><code>thClass</code></td>\\n<td>String or Array</td>\\n<td>Class name (or array of class names) to add to <code>&lt;thead&gt;</code>/<code>&lt;tfoot&gt;</code> heading <code>&lt;th&gt;</code> cell.</td>\\n</tr>\\n<tr>\\n<td><code>thStyle</code></td>\\n<td>Object</td>\\n<td>JavaScript object representing CSS styles you would like to apply to the table <code>&lt;thead&gt;</code>/<code>&lt;tfoot&gt;</code> field <code>&lt;th&gt;</code>.</td>\\n</tr>\\n<tr>\\n<td><code>variant</code></td>\\n<td>String</td>\\n<td>Apply contextual class to all the <code>&lt;th&gt;</code> <strong>and</strong> <code>&lt;td&gt;</code> in the column - <code>active</code>, <code>success</code>, <code>info</code>, <code>warning</code>, <code>danger</code> (these variants map to classes <code>thead-${variant}</code>, <code>table-${variant}</code>, or <code>bg-${variant}</code> accordingly).</td>\\n</tr>\\n<tr>\\n<td><code>tdAttr</code></td>\\n<td>Object</td>\\n<td>JavaScript object representing additional attributes to apply to the <code>&lt;tbody&gt;</code> field <code>td</code> cell.</td>\\n</tr>\\n<tr>\\n<td><code>isRowHeader</code></td>\\n<td>Boolean</td>\\n<td>When set to <code>true</code>, the field&apos;s item data cell will be rendered with <code>&lt;th&gt;</code> rather than the default of <code>&lt;td&gt;</code>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p><strong>Notes:</strong></p>\\n<ul>\\n<li><em>Field properties, if not present, default to <code>null</code> (falsey) unless otherwise stated above.</em></li>\\n<li><em><code>thClass</code> and <code>tdClass</code> will not work with classes that are defined in scoped CSS</em></li>\\n<li><em>For information on the syntax supported by <code>thStyle</code>, see\\n<a href=\\\"https://vuejs.org/v2/guide/class-and-style.html#Binding-Inline-Styles\\\">Class and Style Bindings</a>\\nin the Vue.js guide.</em></li>\\n<li><em>Any additional properties added to the field objects will be left intact - so you can access\\nthem via the named scoped slots for custom data, header, and footer rendering.</em></li>\\n</ul>\\n</blockquote>\\n<p>For information and usage about scoped slots and formatters, refer to\\nthe <a href=\\\"#custom-data-rendering\\\"><strong>Custom Data Rendering</strong></a> section below.</p>\\n<p>Feel free to mix and match simple array and object array together:</p>\\n<pre class=\\\"hljs\\\">fields: [\\n  { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;First&apos;</span> },\\n  { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Last&apos;</span> },\\n  <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n  <span class=\\\"hljs-string\\\">&apos;sex&apos;</span>\\n]\\n</pre>\\n<h2 id=\\\"table-style-options\\\">Table style options</h2>\\n<p><code>&lt;b-table&gt;</code> provides several props to alter the style of the table:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>prop</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>striped</code></td>\\n<td>Boolean</td>\\n<td>Add zebra-striping to the table rows within the <code>&lt;tbody&gt;</code></td>\\n</tr>\\n<tr>\\n<td><code>bordered</code></td>\\n<td>Boolean</td>\\n<td>For borders on all sides of the table and cells.</td>\\n</tr>\\n<tr>\\n<td><code>outlined</code></td>\\n<td>Boolean</td>\\n<td>For a thin border on all sides of the table. Has no effect is <code>bordered</code> is set.</td>\\n</tr>\\n<tr>\\n<td><code>small</code></td>\\n<td>Boolean</td>\\n<td>To make tables more compact by cutting cell padding in half.</td>\\n</tr>\\n<tr>\\n<td><code>hover</code></td>\\n<td>Boolean</td>\\n<td>To enable a hover highlighting state on table rows within a <code>&lt;tbody&gt;</code></td>\\n</tr>\\n<tr>\\n<td><code>dark</code></td>\\n<td>Boolean</td>\\n<td>Invert the colors &#x2014; with light text on dark backgrounds (equivalent to Bootstrap V4 class <code>.table-dark</code>)</td>\\n</tr>\\n<tr>\\n<td><code>fixed</code></td>\\n<td>Boolean</td>\\n<td>Generate a table with equal fixed-width columns (<code>table-layout: fixed</code>)</td>\\n</tr>\\n<tr>\\n<td><code>foot-clone</code></td>\\n<td>Boolean</td>\\n<td>Turns on the table footer, and defaults with the same contents a the table header</td>\\n</tr>\\n<tr>\\n<td><code>responsive</code></td>\\n<td>Boolean or String</td>\\n<td>Generate a responsive table to make it scroll horizontally. Set to <code>true</code> for an always responsive table, or set it to one of the breakpoints <code>&apos;sm&apos;</code>, <code>&apos;md&apos;</code>, <code>&apos;lg&apos;</code>, or <code>&apos;xl&apos;</code> to make the table responsive (horizontally scroll) only on screens smaller than the breakpoint. See <a href=\\\"#responsive-tables\\\"><strong>Responsive tables</strong></a> below for details.</td>\\n</tr>\\n<tr>\\n<td><code>stacked</code></td>\\n<td>Boolean or String</td>\\n<td>Generate a responsive stacked table. Set to <code>true</code> for an always stacked table, or set it to one of the breakpoints <code>&apos;sm&apos;</code>, <code>&apos;md&apos;</code>, <code>&apos;lg&apos;</code>, or <code>&apos;xl&apos;</code> to make the table visually stacked only on screens smaller than the breakpoint.  See <a href=\\\"#stacked-tables\\\"><strong>Stacked tables</strong></a> below for details.</td>\\n</tr>\\n<tr>\\n<td><code>head-variant</code></td>\\n<td>String</td>\\n<td>Use <code>&apos;light&apos;</code> or <code>&apos;dark&apos;</code> to make table header appear light or dark gray, respectively</td>\\n</tr>\\n<tr>\\n<td><code>foot-variant</code></td>\\n<td>String</td>\\n<td>Use <code>&apos;light&apos;</code> or <code>&apos;dark&apos;</code> to make table footer appear light or dark gray, respectively. If not set, <code>head-variant</code> will be used. Has no effect if <code>foot-clone</code> is not set</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p><strong>Deprecation note:</strong> <em>As of Bootstrap-Vue v1.0.0, the prop <code>inverse</code> has been deprecated in\\nfavour of prop <code>dark</code> to better align with the new Bootstrap V4.beta.2 CSS class names.</em></p>\\n</blockquote>\\n<p><strong>Example: Basic table styles</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;striped&quot;</span>&gt;</span>Striped<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;bordered&quot;</span>&gt;</span>Bordered<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;outlined&quot;</span>&gt;</span>Outlined<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;small&quot;</span>&gt;</span>Small<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;hover&quot;</span>&gt;</span>Hover<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;dark&quot;</span>&gt;</span>Dark<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;fixed&quot;</span>&gt;</span>Fixed<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;footClone&quot;</span>&gt;</span>Foot Clone<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:striped</span>=<span class=\\\"hljs-string\\\">&quot;striped&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:bordered</span>=<span class=\\\"hljs-string\\\">&quot;bordered&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:outlined</span>=<span class=\\\"hljs-string\\\">&quot;outlined&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:small</span>=<span class=\\\"hljs-string\\\">&quot;small&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:hover</span>=<span class=\\\"hljs-string\\\">&quot;hover&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:dark</span>=<span class=\\\"hljs-string\\\">&quot;dark&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:fixed</span>=<span class=\\\"hljs-string\\\">&quot;fixed&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:foot-clone</span>=<span class=\\\"hljs-string\\\">&quot;footClone&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [ <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;age&apos;</span> ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> }\\n      ],\\n      <span class=\\\"hljs-attr\\\">striped</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">bordered</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">outlined</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">small</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">hover</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">dark</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">fixed</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">footClone</span>: <span class=\\\"hljs-literal\\\">false</span>\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-bordered.vue --&gt;</span>\\n</pre>\\n<h2 id=\\\"responsive-tables\\\">Responsive tables</h2>\\n<p>Responsive tables allow tables to be scrolled horizontally with ease. Make any table\\nresponsive across all viewports by setting the prop <code>responsive</code> to <code>true</code>. Or, pick a\\nmaximum breakpoint with which to have a responsive table up to by setting the prop\\n<code>responsive</code> to one of the breakpoint values: <code>sm</code>, <code>md</code>, <code>lg</code>, or <code>xl</code>.</p>\\n<p><strong>Example: Always responsive table</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">responsive</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        {\\n          <span class=\\\"hljs-string\\\">&apos;heading 1&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 2&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 3&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 4&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 5&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 6&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 7&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 8&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 9&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 10&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-string\\\">&apos;heading 1&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 2&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 3&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 4&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 5&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 6&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 7&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 8&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 9&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 10&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-string\\\">&apos;heading 1&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 2&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 3&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 4&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 5&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 6&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 7&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 8&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 9&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>,\\n          <span class=\\\"hljs-string\\\">&apos;heading 10&apos;</span>: <span class=\\\"hljs-string\\\">&apos;table cell&apos;</span>\\n        }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-responsive.vue --&gt;</span>\\n</pre>\\n<blockquote>\\n<p><strong>Responsive table notes:</strong></p>\\n<ul>\\n<li><em>Possible vertical clipping/truncation</em>. Responsive tables make use of <code>overflow-y: hidden</code>, which clips off any content that goes beyond the bottom or top edges of the table. In particular, this can clip off dropdown menus and other third-party widgets.</li>\\n<li>When in responsive mode the table will lose it&apos;s width of 100%. This is a known issue with bootstrap V4 css and placing the <code>table-responsive</code> class on the <code>&lt;table&gt;</code> element as reccommended by Bootstrap.</li>\\n</ul>\\n</blockquote>\\n<h2 id=\\\"stacked-tables\\\">Stacked tables</h2>\\n<p>An alternative to responsive tables, Bootstrap-Vue includes the stacked table option, which\\nallow tables to be rendered in a visually stacked format. Make any table stacked across\\n<em>all viewports</em> by setting the prop <code>stacked</code> to <code>true</code>. Or, alternatively, set a breakpoint\\nat which the table will return to normal table format by setting the prop <code>stacked</code> to one\\nof the breakpoint values <code>&apos;sm&apos;</code>, <code>&apos;md&apos;</code>, <code>&apos;lg&apos;</code>, or <code>&apos;xl&apos;</code>.</p>\\n<p>Column header labels will be rendered to the left of each field value using a CSS\\n<code>::before</code> pseudo element, with a width of 40%.</p>\\n<p>The prop <code>stacked</code> takes precedence over the <code>responsive</code> prop.</p>\\n<p><strong>Example: Always stacked table</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">stacked</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-stacked.vue --&gt;</span>\\n</pre>\\n<p><strong>Note: When the table is visually stacked:</strong></p>\\n<ul>\\n<li>The table header (and table footer) will be hidden.</li>\\n<li>Custom rendred header slots will not be shown, rather, the fields&apos; <code>label</code> will be used.</li>\\n<li>The table <strong>cannot</strong> be sorted by clicking the rendered field labels. You will need to provde an external control to select the field to sort by and the sort direction. See the <a href=\\\"#sorting\\\"><strong>Sorting</strong></a> section below for sorting control information, as well as the <a href=\\\"#complete-example\\\"><strong>complete example</strong></a> at the bottom of this page for an example of controlling sorting via the use of form controls.</li>\\n<li>The slots <code>top-row</code> and <code>bottom-row</code> will be hidden when visually stacked.</li>\\n<li>The table caption, if provided, will always appear at the top of the table when visually stacked.</li>\\n<li>In an always stacked table, the table header and footer, and the fixed top and bottom row slots will not be rendered.</li>\\n</ul>\\n<h2 id=\\\"table-caption\\\">Table caption</h2>\\n<p>Add an optional caption to your table via the prop <code>caption</code> or the named\\nslot <code>table-caption</code> (the slot takes precedence over the prop). The default\\nBootstrap V4 styling places the caption at the bottom of the table:</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;table-caption&quot;</span>&gt;</span>\\n      This is a table caption.\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [ <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;age&apos;</span> ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-caption.vue --&gt;</span>\\n</pre>\\n<p>You can have the caption placed at the top of the table by setting the\\n<code>caption-top</code> prop to <code>true</code>:</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span> <span class=\\\"hljs-attr\\\">caption-top</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;table-caption&quot;</span>&gt;</span>\\n      This is a table caption at the top.\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [ <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;age&apos;</span> ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-caption-top.vue --&gt;</span>\\n</pre>\\n<p>You can also use <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side\\\">custom CSS</a>\\nto control the caption positioning.</p>\\n<h2 id=\\\"table-colgroup\\\">Table colgroup</h2>\\n<p>Use the named slot <code>table-colgroup</code> to specify <code>&lt;colgroup&gt;</code> and <code>&lt;col&gt;</code> elements\\nfor optional grouping and styling of table columns. Note the styles available via <code>&lt;col&gt;</code>\\nelements are limited. Refer to <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\\\">MDN</a>\\nfor details and usage of <code>&lt;colgroup&gt;</code></p>\\n<h2 id=\\\"custom-data-rendering\\\">Custom Data Rendering</h2>\\n<p>Custom rendering for each data field in a row is possible using either\\n<a href=\\\"http://vuejs.org/v2/guide/components.html#Scoped-Slots\\\">scoped slots</a>\\nor formatter callback function.</p>\\n<h3 id=\\\"scoped-field-slots\\\">Scoped Field Slots</h3>\\n<p>Scoped slots give you greater control over how the record data apepars.\\nIf you want to add an extra field which does not exist in the records,\\njust add it to the <code>fields</code> array, And then reference the field(s) in the scoped\\nslot(s).</p>\\n<p><strong>Example: Custom data rendering with scoped slots</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A virtual column --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;index&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n      {{data.index + 1}}\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A custom formatted column --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n      {{data.value.first}} {{data.value.last}}\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A virtual composite column --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;nameage&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n      {{data.item.name.first}} is {{data.item.age}} years old\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [\\n        <span class=\\\"hljs-comment\\\">// A virtual column that doesn&apos;t exist in items</span>\\n        <span class=\\\"hljs-string\\\">&apos;index&apos;</span>,\\n        <span class=\\\"hljs-comment\\\">// A column that needs custom formatting</span>\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;name&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Full Name&apos;</span> },\\n        <span class=\\\"hljs-comment\\\">// A regular column</span>\\n        <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n        <span class=\\\"hljs-comment\\\">// A regular column</span>\\n        <span class=\\\"hljs-string\\\">&apos;sex&apos;</span>,\\n        <span class=\\\"hljs-comment\\\">// A virtual column made up from two fields</span>\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;nameage&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;First name and age&apos;</span> }\\n      ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;John&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Doe&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Male&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">42</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Jane&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Doe&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Female&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">36</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Rubin&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Kincade&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Male&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">73</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Shirley&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Partridge&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Female&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">62</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-data-slots.vue --&gt;</span>\\n</pre>\\n<p>The slot&apos;s scope variable (<code>data</code> in the above sample) will have the following properties:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>index</code></td>\\n<td>Number</td>\\n<td>The row number (indexed from zero) relative to the displayed rows</td>\\n</tr>\\n<tr>\\n<td><code>item</code></td>\\n<td>Object</td>\\n<td>The entire raw record data (i.e. <code>items[index]</code>) for this row (before any formatter is applied)</td>\\n</tr>\\n<tr>\\n<td><code>value</code></td>\\n<td>Any</td>\\n<td>The value for this key in the record (<code>null</code> or <code>undefined</code> if a virtual column), or the output of the field&apos;s <code>formatter</code> function (see below for for information on field <code>formatter</code> callback functions)</td>\\n</tr>\\n<tr>\\n<td><code>unformatted</code></td>\\n<td>Any</td>\\n<td>The raw value for this key in the item record (<code>null</code> or <code>undefined</code> if a virtual column), before being passed to the field&apos;s <code>formatter</code> function</td>\\n</tr>\\n<tr>\\n<td><code>detailsShowing</code></td>\\n<td>Boolean</td>\\n<td>Will be <code>true</code> if the row&apos;s <code>row-details</code> scoped slot is visible. See section <a href=\\\"#row-details-support\\\"><strong>Row details support</strong></a> below for additional information</td>\\n</tr>\\n<tr>\\n<td><code>toggleDetails</code></td>\\n<td>Function</td>\\n<td>Can be called to toggle the visibility of the rows <code>row-details</code> scoped slot. See section <a href=\\\"#row-details-support\\\"><strong>Row details support</strong></a> below for additional information</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p><strong>Notes:</strong></p>\\n<ul>\\n<li><em><code>index</code> will not always be the actual row&apos;s index number, as it is\\ncomputed after pagination and filtering have been applied to the original\\ntable data. The <code>index</code> value will refer to the <strong>displayed row number</strong>. This\\nnumber will align with the indexes from the optional <code>v-model</code> bound variable.</em></li>\\n<li><em>When placing inputs, buttons, selects or links within a data cell scoped slot,\\nbe sure to add a <code>@click.stop</code> (or <code>@click.native.stop</code> if needed) handler (which can\\nbe empty) to prevent the click on the input, button, select, or link, from triggering\\nthe <code>row-clicked</code> event:</em></li>\\n</ul>\\n</blockquote>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;actions&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;cell&quot;</span>&gt;</span>\\n  <span class=\\\"hljs-comment\\\">&lt;!-- We use click.stop here to prevent a &apos;row-clicked&apos; event from also happening --&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-btn</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">&quot;sm&quot;</span> @<span class=\\\"hljs-attr\\\">click.stop</span>=<span class=\\\"hljs-string\\\">&quot;details(cell.item,cell.index,$event.target)&quot;</span>&gt;</span>Details<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-btn</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n</pre>\\n<h3 id=\\\"formatter-callback\\\">Formatter callback</h3>\\n<p>One more option to customize field output is to use formatter callback function.\\nTo enable this field&apos;s property <code>formatter</code> is used. Value of this property may be\\nString or function reference. In case of a String value, function must be defined at\\nparent component&apos;s methods. Providing formatter as <code>Function</code>, it must be declared at\\nglobal scope (window or as global mixin at Vue).</p>\\n<p>Callback function accepts three arguments - <code>value</code>, <code>key</code>, and <code>item</code>, and should\\nreturn the formatted value as a string (basic HTML is supported)</p>\\n<p><strong>Example: Custom data rendering with formatter callback function</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">a</span> <span class=\\\"hljs-attr\\\">:href</span>=<span class=\\\"hljs-string\\\">&quot;`#${data.value.replace(/[^a-z]+/i,&apos;-&apos;).toLowerCase()}`&quot;</span>&gt;</span>\\n        {{data.value}}\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">a</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [\\n        {\\n          <span class=\\\"hljs-comment\\\">// A column that needs custom formatting,</span>\\n          <span class=\\\"hljs-comment\\\">// calling formatter &apos;fullName&apos; in this app</span>\\n          key: <span class=\\\"hljs-string\\\">&apos;name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Full Name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">formatter</span>: <span class=\\\"hljs-string\\\">&apos;fullName&apos;</span>\\n        },\\n        <span class=\\\"hljs-comment\\\">// A regular column</span>\\n        <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n        {\\n          <span class=\\\"hljs-comment\\\">// A regular column with custom formatter</span>\\n          key: <span class=\\\"hljs-string\\\">&apos;sex&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">formatter</span>: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">value</span>) =&gt;</span> { <span class=\\\"hljs-keyword\\\">return</span> value.charAt(<span class=\\\"hljs-number\\\">0</span>).toUpperCase() }\\n        },\\n        {\\n          <span class=\\\"hljs-comment\\\">// A virtual column with custom formatter</span>\\n          key: <span class=\\\"hljs-string\\\">&apos;birthYear&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Calculated Birth Year&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">formatter</span>: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">value, key, item</span>) =&gt;</span> {\\n            <span class=\\\"hljs-keyword\\\">return</span> (<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>()).getFullYear() - item.age\\n          }\\n        }\\n      ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;John&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Doe&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Male&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">42</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Jane&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Doe&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;Female&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">36</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Rubin&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Kincade&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;male&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">73</span> },\\n        { <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Shirley&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Partridge&apos;</span> }, <span class=\\\"hljs-attr\\\">sex</span>: <span class=\\\"hljs-string\\\">&apos;female&apos;</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">62</span> }\\n      ]\\n    }\\n  },\\n  <span class=\\\"hljs-attr\\\">methods</span>: {\\n    fullName (value) {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${value.first}</span> <span class=\\\"hljs-subst\\\">${value.last}</span>`</span>\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-data-formatter.vue --&gt;</span>\\n</pre>\\n<h2 id=\\\"header-footer-custom-rendering-via-scoped-slots\\\">Header/Footer custom rendering via scoped slots</h2>\\n<p>It is also possible to provide custom rendering for the tables <code>thead</code> and\\n<code>tfoot</code> elements. Note by default the table footer is not rendered unless\\n<code>foot-clone</code> is set to <code>true</code>.</p>\\n<p>Scoped slots for the header and footer cells uses a special naming\\nconvetion of <code>HEAD_&lt;fieldkey&gt;</code> and <code>FOOT_&lt;fieldkey&gt;</code> respectivly. if a <code>FOOT_</code>\\nslot for a field is not provided, but a <code>HEAD_</code> slot is provided, then\\nthe footer will use the <code>HEAD_</code> slot content.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>  <span class=\\\"hljs-attr\\\">foot-clone</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A custom formatted data column cell --&gt;</span>\\n    {{data.value.first}} {{data.value.last}}\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;HEAD_name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A custom formatted header cell for field &apos;name&apos; --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">em</span>&gt;</span>{{data.label}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">em</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;FOOT_name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;data&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- A custom formatted footer cell  for field &apos;name&apos; --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{data.label}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n</pre>\\n<p>The slot&apos;s scope variable (<code>data</code> in the above example) will have the following properties:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>column</code></td>\\n<td>String</td>\\n<td>The fields&apos;s <code>key</code> value</td>\\n</tr>\\n<tr>\\n<td><code>field</code></td>\\n<td>Object</td>\\n<td>the field&apos;s object (from the <code>fields</code> prop)</td>\\n</tr>\\n<tr>\\n<td><code>label</code></td>\\n<td>String</td>\\n<td>The fields label value (also available as <code>data.field.label</code>)</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>When placing inputs, buttons, selects or links within a <code>HEAD_</code> or <code>FOOT_</code> slot,\\nbe sure to add a <code>@click.stop</code> (or <code>@click.native.stop</code>) handler (which can be empty) to prevent the\\nclick on the input, button, select, or link, from triggering a change in sorting,\\nor a <code>head-clicked</code> event.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;HEAD_actions&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;foo&quot;</span>&gt;</span>\\n  <span class=\\\"hljs-comment\\\">&lt;!-- We use click.stop here to prevent &apos;sort-changed&apos; or &apos;head-clicked&apos; events --&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">input</span> @<span class=\\\"hljs-attr\\\">click.stop</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;checkbox&quot;</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">&quot;foo.column&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;selected&quot;</span>&gt;</span>\\n  <span class=\\\"hljs-comment\\\">&lt;!-- We use click.native.stop here to prevent &apos;sort-changed&apos; or &apos;head-clicked&apos; events --&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> @<span class=\\\"hljs-attr\\\">click.native.stop</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">&quot;foo.column&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;selected&quot;</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n</pre>\\n<h2 id=\\\"row-details-support\\\">Row details support</h2>\\n<p>If you would optionally like to display additional record information (such as\\ncolumns not specified in the fields definition array), you can use the scoped slot\\n<code>row-details</code>, in combination with the special item record Boolean property\\n<code>_showDetails</code>.</p>\\n<p>If the record has it&apos;s <code>_showDetails</code> property set to <code>true</code>, <strong>and</strong> a <code>row-details</code>\\nscoped slot exists, a new row will be shown just below the item, with the rendered\\ncontents of the <code>row-details</code> scoped slot.</p>\\n<p>In the scoped field slot, you can toggle the visibility of the row&apos;s <code>row-details</code>\\nscoped slot by calling the <code>toggleDetails</code> function passed to the field&apos;s scoped slot\\nvariable. You can use the scoped fields slot variable <code>detailsShowing</code> to determine\\nthe visibility of the <code>row-details</code> slot.</p>\\n<blockquote>\\n<p><strong>Note:</strong> _If manipulating the <code>_showDetails</code> property directly on the item data (i.e.\\n not via the <code>toggleDetails</code> function reference), the <code>_showDetails</code> propertly <strong>must</strong>\\n exist in the items data for proper reactive detection of changes to it&apos;s value. Read more about\\n<a href=\\\"https://vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats\\\">Vue&apos;s reactivity limitations</a>._</p>\\n</blockquote>\\n<p>Available <code>row-details</code> scoped viariable properties:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>item</code></td>\\n<td>Object</td>\\n<td>The entire row record data object</td>\\n</tr>\\n<tr>\\n<td><code>index</code></td>\\n<td>Number</td>\\n<td>The current visible row number</td>\\n</tr>\\n<tr>\\n<td><code>fields</code></td>\\n<td>Array</td>\\n<td>The normailized fields definition array (in the <em>array of objects</em> format)</td>\\n</tr>\\n<tr>\\n<td><code>toggleDetails</code></td>\\n<td>Function</td>\\n<td>Function to toggle visibility of the row&apos;s details slot</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>In the following example, we show two methods of toggling the visibility of the details:\\none via a button, and one via a checkbox. We also have the third row row details defaulting\\nto have details initially showing.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;show_details&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- we use @click.stop here to prevent emitting of a &apos;row-clicked&apos; event  --&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-button</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">&quot;sm&quot;</span> @<span class=\\\"hljs-attr\\\">click.stop</span>=<span class=\\\"hljs-string\\\">&quot;row.toggleDetails&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mr-2&quot;</span>&gt;</span>\\n       {{ row.detailsShowing ? &apos;Hide&apos; : &apos;Show&apos;}} Details\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-button</span>&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- In some circumstances you may need to use @click.native.stop instead --&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- As `row.showDetails` is one-way, we call the toggleDetails function on @change --&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-checkbox</span> @<span class=\\\"hljs-attr\\\">click.native.stop</span> @<span class=\\\"hljs-attr\\\">change</span>=<span class=\\\"hljs-string\\\">&quot;row.toggleDetails&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;row.detailsShowing&quot;</span>&gt;</span>\\n        Details via check\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-checkbox</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;row-details&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-card</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-row</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mb-2&quot;</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">sm</span>=<span class=\\\"hljs-string\\\">&quot;3&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;text-sm-right&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b</span>&gt;</span>Age:<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>{{ row.item.age }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-row</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-row</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mb-2&quot;</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">sm</span>=<span class=\\\"hljs-string\\\">&quot;3&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;text-sm-right&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b</span>&gt;</span>Is Active:<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>{{ row.item.isActive }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-row</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-button</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">&quot;sm&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;row.toggleDetails&quot;</span>&gt;</span>Hide Details<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-card</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">fields</span>: [ <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-string\\\">&apos;show_details&apos;</span> ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span>, <span class=\\\"hljs-attr\\\">_showDetails</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-details.vue --&gt;</span>\\n</pre>\\n<h2 id=\\\"sorting\\\">Sorting</h2>\\n<p>As mentioned in the <a href=\\\"#fields-column-definitions-\\\"><strong>Fields</strong></a> section above,\\nyou can make columns sortable. Clicking on a sortable column header will sort the\\ncolumn in ascending direction (smallest first), while clicking on it again will switch the direction\\nof sorting. Clicking on a non-sortable column will clear the sorting.</p>\\n<p>You can control which column is pre-sorted and the order of sorting (ascending or\\ndescending). To pre-specify the column to be sorted, set the <code>sort-by</code> prop to\\nthe field&apos;s key. Set the sort direction by setting <code>sort-desc</code> to either <code>true</code>\\n(for descending) or <code>false</code> (for ascending, the default).</p>\\n<p>The props <code>sort-by</code> and <code>sort-desc</code> can be turned into <em>two-way</em> (syncable) props by\\nadding the <code>.sync</code> modifier. Your bound variables will then be updated accordingly\\nbased on the current sort critera. See the\\n<a href=\\\"http://vuejs.org/v2/guide/components.html#sync-Modifier\\\">Vue docs</a> for details\\non the <code>.sync</code> prop modifier</p>\\n<blockquote>\\n<p><strong>Note:</strong> <em>The built-in <code>sort-compare</code> routine <strong>cannot</strong> sort virtual columns, nor\\nsort based on the custom rendering of the field data (formatter functions and/or\\nscoped slots are used only for presentation only, and do not affect the underlying data).\\nRefer to the <a href=\\\"#sort-compare-routine\\\"><strong>Sort-compare routine</strong></a> section below for details on\\nsorting by presentational data.</em></p>\\n</blockquote>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:sort-by.sync</span>=<span class=\\\"hljs-string\\\">&quot;sortBy&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:sort-desc.sync</span>=<span class=\\\"hljs-string\\\">&quot;sortDesc&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n      Sorting By: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b</span>&gt;</span>{{ sortBy }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b</span>&gt;</span>,\\n      Sort Direction: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b</span>&gt;</span>{{ sortDesc ? &apos;Descending&apos; : &apos;Ascending&apos; }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">sortBy</span>: <span class=\\\"hljs-string\\\">&apos;age&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">sortDesc</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">fields</span>: [\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;last_name&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;first_name&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;age&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;isActive&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">false</span> }\\n      ],\\n      <span class=\\\"hljs-attr\\\">items</span>: [\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">first_name</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last_name</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-sorting.vue --&gt;</span>\\n</pre>\\n<h3 id=\\\"sort-compare-routine\\\">Sort-Compare routine</h3>\\n<p>The built-in default <code>sort-compare</code> function sorts the specified field <code>key</code> based\\non the data in the underlying record object (not by the formatted value). The field\\nvalue is first stringified if it is an object, and then sorted.</p>\\n<p>The default <code>sort-compare</code> routine <strong>cannot</strong> sort virtual columns, nor sort based\\non the custom rendering of the field data (formatter functions and/or scoped slots\\nare used only for presentation). For this reason, you can provide your own\\ncustom sort compare routine by passing a function reference to the prop <code>sort-compare</code>.</p>\\n<p>The <code>sort-compare</code> routine is passed three arguments. The first two arguments\\n(<code>a</code> and <code>b</code>) are the record objects for the rows being compared, and the third\\nargument is the field <code>key</code> being sorted on (<code>sortBy</code>). The routine should return\\neither <code>-1</code>, <code>0</code>, or <code>1</code> based on the result of the comparing of the two records.\\nIf the routine returns <code>null</code>, then the default sort-compare rouine will be used.\\nYou can use this feature (i.e. returning <code>null</code>) to have your custom sort-compare\\nroutine handle only certain fields (keys).</p>\\n<p>The default sort-compare routine works as follows:</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">typeof</span> a[key] === <span class=\\\"hljs-string\\\">&apos;number&apos;</span> &amp;&amp; <span class=\\\"hljs-keyword\\\">typeof</span> b[key] === <span class=\\\"hljs-string\\\">&apos;number&apos;</span>) {\\n  <span class=\\\"hljs-comment\\\">// If both compared fields are native numbers</span>\\n  <span class=\\\"hljs-keyword\\\">return</span> a[key] &lt; b[key] ? <span class=\\\"hljs-number\\\">-1</span> : (a[key] &gt; b[key] ? <span class=\\\"hljs-number\\\">1</span> : <span class=\\\"hljs-number\\\">0</span>)\\n} <span class=\\\"hljs-keyword\\\">else</span> {\\n  <span class=\\\"hljs-comment\\\">// Stringify the field data and use String.localeCompare</span>\\n  <span class=\\\"hljs-keyword\\\">return</span> toString(a[key]).localeCompare(toString(b[key]), <span class=\\\"hljs-literal\\\">undefined</span>, {\\n    <span class=\\\"hljs-attr\\\">numeric</span>: <span class=\\\"hljs-literal\\\">true</span>\\n  })\\n}\\n</pre>\\n<h3 id=\\\"disable-local-sorting\\\">Disable local sorting</h3>\\n<p>If you want to handle sorting entirely in your app, you can disable the local\\nsorting in <code>&lt;b-table&gt;</code> bu setting the prop <code>no-local-sorting</code> to true, while\\nstill maintaining the sortable header functionality.</p>\\n<p>You can use the syncable props <code>sort-by.sync</code> and <code>sort-desc.sync</code> to detect\\nchanges in sorting column and direction.</p>\\n<p>Also, When a sortable column header (or footer) is clicked, the event <code>sort-changed</code>\\nwill be emitted with a single argument containing the context object of <code>&lt;b-table&gt;</code>.\\nSee the <a href=\\\"#detection-of-sorting-change\\\">Detection of sorting change</a> section below\\nfor details about the sort-changed event and the context object.</p>\\n<h2 id=\\\"filtering\\\">Filtering</h2>\\n<p>Filtering, when used, is applied to the <strong>original items</strong> array data, and hence it is not\\npossible to filter data based on custom rendering of virtual columns. The items row data\\nis stringified and the filter searches that stringified data (excluding any properties\\nthat begin with an underscore <code>_</code>).</p>\\n<p>The <code>filter</code> prop value can be a string, a <code>RegExp</code> or a <code>function</code> reference. If\\na function is provided, the first argument is the original item record data object. The\\nfunction should return <code>true</code> if the record matches your criteria or <code>false</code> if\\nthe record is to be filtered out.</p>\\n<p>When local filtering is applied, and the resultant number of items change, <code>&lt;b-table&gt;</code>\\nwill emit the <code>filtered</code> event, passing a single argument which is the complete list of\\nitems passing the filter routine. <strong>Treat this argument as read-only.</strong></p>\\n<p>Setting the prop <code>filter</code> to null or an empty string will disable local items filtering.</p>\\n<p>See the <a href=\\\"#complete-example\\\">Complete Example</a> below for an example of using the\\n<code>filter</code> feature.</p>\\n<h2 id=\\\"pagination\\\">Pagination</h2>\\n<p><code>&lt;b-table&gt;</code> supports built in pagination of item data. You can control how many\\nreords are displayed at a time by setting the <code>per-page</code> prop to the maximum\\nnumber of rows you would like displayed, and use the <code>current-page</code> prop\\nto specify which page to display (starting from page <code>1</code>). If you set <code>current-page</code>\\nto a value larger than the computed number of pages, then no rows will be shown.</p>\\n<p>You can use the <a href=\\\"/docs/components/pagination\\\"><code>&lt;b-pagination&gt;</code></a> component in\\nconjuction with <code>&lt;b-table&gt;</code> for providing control over pagination.</p>\\n<p>Setting <code>per-page</code> to <code>0</code> (default) will disable the local items pagination feature.</p>\\n<h2 id=\\\"-v-model-binding\\\"><code>v-model</code> binding</h2>\\n<p>If you bind a variable to the <code>v-model</code> prop, the contents of this variable will\\nbe the currently disaplyed item records (zero based index, up to <code>page-size</code> - 1).\\nThis variable (the <code>value</code> prop) should usually be treated as readonly.</p>\\n<p>The records within the v-model are a filtered/paginated shallow copy of <code>items</code>, and\\nhence any changes to a record&apos;s properties in the v-model will be reflected in\\nthe original <code>items</code> array (except when <code>items</code> is set to a provider function).\\nDeleting a record from the v-model will <strong>not</strong> remove the record from the\\noriginal items array.</p>\\n<blockquote>\\n<p><strong>Note:</strong> <em>Do not bind any value directly to the <code>value</code> prop. Use the <code>v-model</code> binding.</em></p>\\n</blockquote>\\n<h2 id=\\\"using-items-provider-functions\\\">Using Items Provider Functions</h2>\\n<p>As mentioned under the <a href=\\\"#items-record-data-\\\"><strong>Items</strong></a> prop section, it is possible to use a function to provide\\nthe row data (items), by specifying a function reference via the <code>items</code> prop.</p>\\n<p>The provider function is called with the following signature:</p>\\n<pre class=\\\"hljs\\\">    provider(ctx, [callback])\\n</pre>\\n<p>The <code>ctx</code> is the context object associated with the table state, and contains the\\nfollowing five properties:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Property</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>currentPage</code></td>\\n<td>Number</td>\\n<td>The current page number (starting from 1, the value of the <code>current-page</code> prop)</td>\\n</tr>\\n<tr>\\n<td><code>perPage</code></td>\\n<td>Number</td>\\n<td>The maximum number of rows per page to display (the value of the <code>per-page</code> prop)</td>\\n</tr>\\n<tr>\\n<td><code>filter</code></td>\\n<td>String or RegExp or Function</td>\\n<td>the value of the <code>Filter</code> prop</td>\\n</tr>\\n<tr>\\n<td><code>sortBy</code></td>\\n<td>String</td>\\n<td>The current column key being sorted, or <code>null</code> if not sorting</td>\\n</tr>\\n<tr>\\n<td><code>sortDesc</code></td>\\n<td>Boolean</td>\\n<td>The current sort direction (<code>true</code> for descending, <code>false</code> for ascending)</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>The second argument <code>callback</code> is an optional parameter for when using the callback asynchronous method.</p>\\n<p><strong>Example: returning an array of data (synchronous):</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">function</span> <span class=\\\"hljs-title\\\">myProvider</span> (<span class=\\\"hljs-params\\\">ctx</span>) </span>{\\n  <span class=\\\"hljs-keyword\\\">let</span> items = []\\n\\n  <span class=\\\"hljs-comment\\\">// perform any items processing needed</span>\\n\\n  <span class=\\\"hljs-comment\\\">// Must return an array</span>\\n  <span class=\\\"hljs-keyword\\\">return</span> items || []\\n}\\n</pre>\\n<p><strong>Example: Using callback to return data (asynchronous):</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">function</span> <span class=\\\"hljs-title\\\">myProvider</span> (<span class=\\\"hljs-params\\\">ctx, callback</span>) </span>{\\n  <span class=\\\"hljs-keyword\\\">let</span> params = <span class=\\\"hljs-string\\\">&apos;?page=&apos;</span> + ctx.currentPage + <span class=\\\"hljs-string\\\">&apos;&amp;size=&apos;</span> + ctx.perPage\\n\\n  <span class=\\\"hljs-keyword\\\">this</span>.fetchData(<span class=\\\"hljs-string\\\">&apos;/some/url&apos;</span> + params).then(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">data</span>) =&gt;</span> {\\n    <span class=\\\"hljs-comment\\\">// Pluck the array of items off our axios response</span>\\n    <span class=\\\"hljs-keyword\\\">let</span> items = data.items\\n    <span class=\\\"hljs-comment\\\">// Provide the array of items to the callabck</span>\\n    callback(items)\\n  }).catch(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">error</span> =&gt;</span> {\\n    callback([])\\n  })\\n\\n  <span class=\\\"hljs-comment\\\">// Must return null or undefined to signal b-table that callback is being used</span>\\n  <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>\\n}\\n</pre>\\n<p><strong>Example: Using a Promise to return data (asynchronous):</strong></p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">function</span> <span class=\\\"hljs-title\\\">myProvider</span> (<span class=\\\"hljs-params\\\">ctx</span>) </span>{\\n  <span class=\\\"hljs-keyword\\\">let</span> promise = axios.get(<span class=\\\"hljs-string\\\">&apos;/some/url?page=&apos;</span> + ctx.currentPage + <span class=\\\"hljs-string\\\">&apos;&amp;size=&apos;</span> + ctx.perPage)\\n\\n  <span class=\\\"hljs-comment\\\">// Must return a promise that resolves to an array of items</span>\\n  <span class=\\\"hljs-keyword\\\">return</span> promise.then(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">data</span>) =&gt;</span> {\\n    <span class=\\\"hljs-comment\\\">// Pluck the array of items off our axios response</span>\\n    <span class=\\\"hljs-keyword\\\">let</span> items = data.items\\n    <span class=\\\"hljs-comment\\\">// Must return an array of items or an empty array if an error occurred</span>\\n    <span class=\\\"hljs-keyword\\\">return</span>(items || [])\\n  })\\n}\\n</pre>\\n<p><code>&lt;b-table&gt;</code> automatically tracks/controls it&apos;s <code>busy</code> state, however it provides\\na <code>busy</code> prop that can be used either to override inner <code>busy</code>state, or to monitor\\n<code>&lt;b-table&gt;</code>&apos;s current busy state in your application using the 2-way <code>.sync</code> modifier.</p>\\n<blockquote>\\n<p><strong>Note:</strong> <em>in order to allow <code>&lt;b-table&gt;</code> fully track it&apos;s <code>busy</code> state, custom items\\nprovider function should handle errors from data sources and return an empty\\narray to <code>&lt;b-table&gt;</code>.</em></p>\\n</blockquote>\\n<p><code>&lt;b-table&gt;</code> provides a <code>busy</code> prop that will flag the table as busy, which you can\\nset to <code>true</code> just before your async fetch, and then set it to <code>false</code> once you have\\nyour data, and just before you send it to the table for display. Example:</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">id</span>=<span class=\\\"hljs-string\\\">&quot;my-table&quot;</span> <span class=\\\"hljs-attr\\\">:busy.sync</span>=<span class=\\\"hljs-string\\\">&quot;isBusy&quot;</span> <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;myProvider&quot;</span> <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span> <span class=\\\"hljs-attr\\\">...</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n</pre>\\n<pre class=\\\"hljs\\\">data () {\\n  <span class=\\\"hljs-keyword\\\">return</span> {\\n    <span class=\\\"hljs-attr\\\">isBusy</span>: <span class=\\\"hljs-literal\\\">false</span>\\n  }\\n}\\nmethods: {\\n  myProvider (ctx) {\\n      <span class=\\\"hljs-comment\\\">// Here we don&apos;t set isBusy prop, so busy state will be handled by table itself</span>\\n      <span class=\\\"hljs-comment\\\">// this.isBusy = true</span>\\n    <span class=\\\"hljs-keyword\\\">let</span> promise = axios.get(<span class=\\\"hljs-string\\\">&apos;/some/url&apos;</span>)\\n\\n    <span class=\\\"hljs-keyword\\\">return</span> promise.then(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">data</span>) =&gt;</span> {\\n      <span class=\\\"hljs-keyword\\\">const</span> items = data.items\\n      <span class=\\\"hljs-comment\\\">// Here we could override the busy state, setting isBusy to false</span>\\n      <span class=\\\"hljs-comment\\\">// this.isBusy = false</span>\\n      <span class=\\\"hljs-keyword\\\">return</span>(items)\\n    }).catch(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">error</span> =&gt;</span> {\\n      <span class=\\\"hljs-comment\\\">// Here we could override the busy state, setting isBusy to false</span>\\n      <span class=\\\"hljs-comment\\\">// this.isBusy = false</span>\\n      <span class=\\\"hljs-comment\\\">// Returning an empty array, allows table to correctly handle busy state in case of error</span>\\n      <span class=\\\"hljs-keyword\\\">return</span> []\\n    })\\n  }\\n}\\n</pre>\\n<blockquote>\\n<p><strong>Notes:</strong></p>\\n<ul>\\n<li><em>If you manually place the table in the <code>busy</code> state, the items provider will\\n<strong>not</strong> be called/refreshed until the <code>busy</code> state has been set to <code>false</code>.</em></li>\\n<li><em>All click related and hover events, and sort-changed events will <strong>not</strong> be\\nemiited when in the <code>busy</code> state (either set automatically during provider update,\\nor when manually set).</em></li>\\n</ul>\\n</blockquote>\\n<h3 id=\\\"provider-paging-filtering-and-sorting\\\">Provider Paging, Filtering, and Sorting</h3>\\n<p>By default, the items provider function is responsible for <strong>all paging, filtering, and sorting</strong>\\nof the data, before passing it to <code>b-table</code> for display.</p>\\n<p>You can disable provider paging, filtering, and sorting (individually) by setting the\\nfollowing <code>b-table</code> prop(s) to <code>true</code>:</p>\\n<table class=\\\"table b-table table-sm table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Prop</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>no-provider-paging</code></td>\\n<td>Boolean</td>\\n<td><code>false</code></td>\\n<td>When <code>true</code> enables the use of <code>b-table</code> local data pagination</td>\\n</tr>\\n<tr>\\n<td><code>no-provider-sorting</code></td>\\n<td>Boolean</td>\\n<td><code>false</code></td>\\n<td>When <code>true</code> enables the use of <code>b-table</code> local sorting</td>\\n</tr>\\n<tr>\\n<td><code>no-provider-filtering</code></td>\\n<td>Boolean</td>\\n<td><code>false</code></td>\\n<td>When <code>true</code> enables the use of <code>b-table</code> local filtering</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>When <code>no-provider-paging</code> is <code>false</code> (default), you should only return at\\nmaximum, <code>perPage</code> number of records.</p>\\n<blockquote>\\n<p><strong>Notes:</strong></p>\\n<ul>\\n<li><em><code>&lt;b-table&gt;</code> needs reference to your pagination and filtering values in order to\\ntrigger the calling of the provider function. So be sure to bind to the <code>per-page</code>,\\n<code>current-page</code> and <code>filter</code> props on <code>b-table</code> to trigger the provider update function call\\n(unless you have the respective <code>no-provider-*</code> prop set to <code>true</code>).</em></li>\\n<li><em>The <code>no-local-sorting</code> prop has no effect when <code>items</code> is a provider funtion.</em></li>\\n</ul>\\n</blockquote>\\n<h3 id=\\\"event-based-refreshing-of-data\\\">Event based refreshing of data</h3>\\n<p>You may also trigger the refresh of the provider function by emitting the\\nevent <code>table::refresh</code> on <code>$root</code> with the single argument being the <code>id</code> of your <code>b-table</code>.\\nYou must have a unique ID on your table for this to work.</p>\\n<pre class=\\\"hljs\\\">    <span class=\\\"hljs-keyword\\\">this</span>.$root.$emit(<span class=\\\"hljs-string\\\">&apos;bv::table::refresh&apos;</span>, <span class=\\\"hljs-string\\\">&apos;my-table&apos;</span>);\\n</pre>\\n<p>Or by calling the refresh method on the table reference</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">ref</span>=<span class=\\\"hljs-string\\\">&quot;table&quot;</span> <span class=\\\"hljs-attr\\\">...</span> &gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n</pre>\\n<pre class=\\\"hljs\\\">    <span class=\\\"hljs-keyword\\\">this</span>.$refs.table.refresh();\\n</pre>\\n<p>These refresh event/methods are only applicable when <code>items</code> is a provider function.</p>\\n<h3 id=\\\"detection-of-sorting-change\\\">Detection of sorting change</h3>\\n<p>By listening on <code>&lt;b-table&gt;</code> <code>sort-changed</code> event, you can detect when the sorting key\\nand direction have changed.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> @<span class=\\\"hljs-attr\\\">sort-changed</span>=<span class=\\\"hljs-string\\\">&quot;sortingChanged&quot;</span> <span class=\\\"hljs-attr\\\">...</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n</pre>\\n<p>The <code>sort-changed</code> event provides a single argument of the table&apos;s current state context object.\\nThis context object has the same format as used by items provider functions.</p>\\n<pre class=\\\"hljs\\\">methods: {\\n  sortingChanged (ctx) {\\n    <span class=\\\"hljs-comment\\\">// ctx.sortBy   ==&gt; Field key for sorting by (or null for no sorting)</span>\\n    <span class=\\\"hljs-comment\\\">// ctx.sortDesc ==&gt; true if sorting descending, false otherwise</span>\\n  }\\n}\\n</pre>\\n<p>You can also obtain the current sortBy and sortDesc values by using the <code>:sort-by.sync</code> and\\n<code>:sort-desc.sync</code> two-way props respectively (see section <a href=\\\"#sorting\\\"><strong>Sorting</strong></a> above for details).</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">:sort-by.sync</span>=<span class=\\\"hljs-string\\\">&quot;mySortBy&quot;</span> <span class=\\\"hljs-attr\\\">:sort-desc.sync</span>=<span class=\\\"hljs-string\\\">&quot;mySortDesc&quot;</span> <span class=\\\"hljs-attr\\\">...</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n</pre>\\n<h3 id=\\\"server-side-rendering\\\">Server Side Rendering</h3>\\n<p>Special care must be taken when using server side rendering (SSR) and an <code>items</code> provider\\nfunction. Make sure you handle any special situations that may be needed server side\\nwhen fetching your data!</p>\\n<h2 id=\\\"complete-example\\\">Complete Example</h2>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-container</span> <span class=\\\"hljs-attr\\\">fluid</span>&gt;</span>\\n    <span class=\\\"hljs-comment\\\">&lt;!-- User Interface controls --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-row</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">md</span>=<span class=\\\"hljs-string\\\">&quot;6&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;my-1&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-group</span> <span class=\\\"hljs-attr\\\">horizontal</span> <span class=\\\"hljs-attr\\\">label</span>=<span class=\\\"hljs-string\\\">&quot;Filter&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mb-0&quot;</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-input-group</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-input</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;filter&quot;</span> <span class=\\\"hljs-attr\\\">placeholder</span>=<span class=\\\"hljs-string\\\">&quot;Type to Search&quot;</span> /&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-input-group-button</span>&gt;</span>\\n              <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-btn</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;!filter&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;filter = &apos;&apos;&quot;</span>&gt;</span>Clear<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-btn</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-input-group-button</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-input-group</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-group</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">md</span>=<span class=\\\"hljs-string\\\">&quot;6&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;my-1&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-group</span> <span class=\\\"hljs-attr\\\">horizontal</span> <span class=\\\"hljs-attr\\\">label</span>=<span class=\\\"hljs-string\\\">&quot;Sort&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mb-0&quot;</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-input-group</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;sortBy&quot;</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">&quot;sortOptions&quot;</span>&gt;</span>\\n              <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;first&quot;</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">&quot;null&quot;</span>&gt;</span>-- none --<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-input-group-button</span>&gt;</span>\\n              <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;!sortBy&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;sortDesc&quot;</span>&gt;</span>\\n                <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">&quot;false&quot;</span>&gt;</span>Asc<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n                <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">&quot;true&quot;</span>&gt;</span>Desc<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n              <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-input-group-button</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-input-group</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-group</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">md</span>=<span class=\\\"hljs-string\\\">&quot;6&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;my-1&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-pagination</span> <span class=\\\"hljs-attr\\\">:total-rows</span>=<span class=\\\"hljs-string\\\">&quot;totalRows&quot;</span> <span class=\\\"hljs-attr\\\">:per-page</span>=<span class=\\\"hljs-string\\\">&quot;perPage&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;currentPage&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;my-0&quot;</span> /&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-col</span> <span class=\\\"hljs-attr\\\">md</span>=<span class=\\\"hljs-string\\\">&quot;6&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;my-1&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-group</span> <span class=\\\"hljs-attr\\\">horizontal</span> <span class=\\\"hljs-attr\\\">label</span>=<span class=\\\"hljs-string\\\">&quot;Per page&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mb-0&quot;</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">&quot;pageOptions&quot;</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">&quot;perPage&quot;</span> /&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-group</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-col</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-row</span>&gt;</span>\\n\\n    <span class=\\\"hljs-comment\\\">&lt;!-- Main table element --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-table</span> <span class=\\\"hljs-attr\\\">show-empty</span>\\n             <span class=\\\"hljs-attr\\\">stacked</span>=<span class=\\\"hljs-string\\\">&quot;md&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:items</span>=<span class=\\\"hljs-string\\\">&quot;items&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:fields</span>=<span class=\\\"hljs-string\\\">&quot;fields&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:current-page</span>=<span class=\\\"hljs-string\\\">&quot;currentPage&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:per-page</span>=<span class=\\\"hljs-string\\\">&quot;perPage&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:filter</span>=<span class=\\\"hljs-string\\\">&quot;filter&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:sort-by.sync</span>=<span class=\\\"hljs-string\\\">&quot;sortBy&quot;</span>\\n             <span class=\\\"hljs-attr\\\">:sort-desc.sync</span>=<span class=\\\"hljs-string\\\">&quot;sortDesc&quot;</span>\\n             @<span class=\\\"hljs-attr\\\">filtered</span>=<span class=\\\"hljs-string\\\">&quot;onFiltered&quot;</span>\\n    &gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;name&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>{{row.value.first}} {{row.value.last}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;isActive&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>{{row.value?&apos;Yes :)&apos;:&apos;No :(&apos;}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;actions&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-comment\\\">&lt;!-- We use @click.stop here to prevent a &apos;row-clicked&apos; event from also happening --&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-button</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">&quot;sm&quot;</span> @<span class=\\\"hljs-attr\\\">click.stop</span>=<span class=\\\"hljs-string\\\">&quot;info(row.item, row.index, $event.target)&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;mr-1&quot;</span>&gt;</span>\\n          Info modal\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-button</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">&quot;sm&quot;</span> @<span class=\\\"hljs-attr\\\">click.stop</span>=<span class=\\\"hljs-string\\\">&quot;row.toggleDetails&quot;</span>&gt;</span>\\n          {{ row.detailsShowing ? &apos;Hide&apos; : &apos;Show&apos; }} Details\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">&quot;row-details&quot;</span> <span class=\\\"hljs-attr\\\">slot-scope</span>=<span class=\\\"hljs-string\\\">&quot;row&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-card</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ul</span>&gt;</span>\\n            <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">li</span> <span class=\\\"hljs-attr\\\">v-for</span>=<span class=\\\"hljs-string\\\">&quot;(value, key) in row.item&quot;</span> <span class=\\\"hljs-attr\\\">:key</span>=<span class=\\\"hljs-string\\\">&quot;key&quot;</span>&gt;</span>{{ key }}: {{ value}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">li</span>&gt;</span>\\n          <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ul</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-card</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-table</span>&gt;</span>\\n\\n    <span class=\\\"hljs-comment\\\">&lt;!-- Info modal --&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-modal</span> <span class=\\\"hljs-attr\\\">id</span>=<span class=\\\"hljs-string\\\">&quot;modalInfo&quot;</span> @<span class=\\\"hljs-attr\\\">hide</span>=<span class=\\\"hljs-string\\\">&quot;resetModal&quot;</span> <span class=\\\"hljs-attr\\\">:title</span>=<span class=\\\"hljs-string\\\">&quot;modalInfo.title&quot;</span> <span class=\\\"hljs-attr\\\">ok-only</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span>&gt;</span>{{ modalInfo.content }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-modal</span>&gt;</span>\\n\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-container</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n<span class=\\\"hljs-keyword\\\">const</span> items = [\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Dickerson&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">21</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> } },\\n  {\\n    <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n    <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">9</span>,\\n    <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Mini&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Navarro&apos;</span> },\\n    <span class=\\\"hljs-attr\\\">_rowVariant</span>: <span class=\\\"hljs-string\\\">&apos;success&apos;</span>\\n  },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">89</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Geneva&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Jami&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">27</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Essie&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Dunlap&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">40</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Thor&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Macdonald&apos;</span> } },\\n  {\\n    <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>,\\n    <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">87</span>,\\n    <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Larsen&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Shaw&apos;</span> },\\n    <span class=\\\"hljs-attr\\\">_cellVariants</span>: { <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-string\\\">&apos;danger&apos;</span>, <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-string\\\">&apos;warning&apos;</span> }\\n  },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">26</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Mitzi&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Navarro&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">22</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Genevieve&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Wilson&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">38</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;John&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Carney&apos;</span> } },\\n  { <span class=\\\"hljs-attr\\\">isActive</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-attr\\\">age</span>: <span class=\\\"hljs-number\\\">29</span>, <span class=\\\"hljs-attr\\\">name</span>: { <span class=\\\"hljs-attr\\\">first</span>: <span class=\\\"hljs-string\\\">&apos;Dick&apos;</span>, <span class=\\\"hljs-attr\\\">last</span>: <span class=\\\"hljs-string\\\">&apos;Dunlap&apos;</span> } }\\n]\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n  data () {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">items</span>: items,\\n      <span class=\\\"hljs-attr\\\">fields</span>: [\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;name&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person Full name&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;age&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Person age&apos;</span>, <span class=\\\"hljs-attr\\\">sortable</span>: <span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-string\\\">&apos;class&apos;</span>: <span class=\\\"hljs-string\\\">&apos;text-center&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;isActive&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;is Active&apos;</span> },\\n        { <span class=\\\"hljs-attr\\\">key</span>: <span class=\\\"hljs-string\\\">&apos;actions&apos;</span>, <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Actions&apos;</span> }\\n      ],\\n      <span class=\\\"hljs-attr\\\">currentPage</span>: <span class=\\\"hljs-number\\\">1</span>,\\n      <span class=\\\"hljs-attr\\\">perPage</span>: <span class=\\\"hljs-number\\\">5</span>,\\n      <span class=\\\"hljs-attr\\\">totalRows</span>: items.length,\\n      <span class=\\\"hljs-attr\\\">pageOptions</span>: [ <span class=\\\"hljs-number\\\">5</span>, <span class=\\\"hljs-number\\\">10</span>, <span class=\\\"hljs-number\\\">15</span> ],\\n      <span class=\\\"hljs-attr\\\">sortBy</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">sortDesc</span>: <span class=\\\"hljs-literal\\\">false</span>,\\n      <span class=\\\"hljs-attr\\\">filter</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">modalInfo</span>: { <span class=\\\"hljs-attr\\\">title</span>: <span class=\\\"hljs-string\\\">&apos;&apos;</span>, <span class=\\\"hljs-attr\\\">content</span>: <span class=\\\"hljs-string\\\">&apos;&apos;</span> }\\n    }\\n  },\\n  <span class=\\\"hljs-attr\\\">computed</span>: {\\n    sortOptions () {\\n      <span class=\\\"hljs-comment\\\">// Create an options list from our fields</span>\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">this</span>.fields\\n        .filter(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">f</span> =&gt;</span> f.sortable)\\n        .map(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">f</span> =&gt;</span> { <span class=\\\"hljs-keyword\\\">return</span> { <span class=\\\"hljs-attr\\\">text</span>: f.label, <span class=\\\"hljs-attr\\\">value</span>: f.key } })\\n    }\\n  },\\n  <span class=\\\"hljs-attr\\\">methods</span>: {\\n    info (item, index, button) {\\n      <span class=\\\"hljs-keyword\\\">this</span>.modalInfo.title = <span class=\\\"hljs-string\\\">`Row index: <span class=\\\"hljs-subst\\\">${index}</span>`</span>\\n      <span class=\\\"hljs-keyword\\\">this</span>.modalInfo.content = <span class=\\\"hljs-built_in\\\">JSON</span>.stringify(item, <span class=\\\"hljs-literal\\\">null</span>, <span class=\\\"hljs-number\\\">2</span>)\\n      <span class=\\\"hljs-keyword\\\">this</span>.$root.$emit(<span class=\\\"hljs-string\\\">&apos;bv::show::modal&apos;</span>, <span class=\\\"hljs-string\\\">&apos;modalInfo&apos;</span>, button)\\n    },\\n    resetModal () {\\n      <span class=\\\"hljs-keyword\\\">this</span>.modalInfo.title = <span class=\\\"hljs-string\\\">&apos;&apos;</span>\\n      <span class=\\\"hljs-keyword\\\">this</span>.modalInfo.content = <span class=\\\"hljs-string\\\">&apos;&apos;</span>\\n    },\\n    onFiltered (filteredItems) {\\n      <span class=\\\"hljs-comment\\\">// Trigger pagination to update the number of buttons/pages due to filtering</span>\\n      <span class=\\\"hljs-keyword\\\">this</span>.totalRows = filteredItems.length\\n      <span class=\\\"hljs-keyword\\\">this</span>.currentPage = <span class=\\\"hljs-number\\\">1</span>\\n    }\\n  }\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- table-complete-1.vue --&gt;</span>\\n</pre>\\n<h2 id=\\\"component-reference\\\">Component Reference</h2>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/table/README.md\n// module id = H0xF\n// module chunks = 24"],"sourceRoot":""}