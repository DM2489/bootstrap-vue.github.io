{"version":3,"sources":["webpack:///./src/components/form-radio/README.md"],"names":["module","exports"],"mappings":"sCAAAA,EAAAC,QAAA","file":"docs/components16.2433caf8080198f3550f.js","sourcesContent":["module.exports = \"<h1 id=form-radio-inputs>Form Radio Inputs</h1> <blockquote> <p>For cross browser consistency, <code>&lt;b-form-radio-group&gt;</code> and <code>&lt;b-form-radio&gt;</code> uses Bootstrap&apos;s custom radio input to replace the browser default radio input. It is built on top of semantic and accessible markup, so it is a solid replacement for the default radio input.</p> </blockquote> <p>The individual radio inputs in radio input group can be specified via the <code>options</code> prop of <code>&lt;b-form-radio-group&gt;</code>, or via manual placement of the <code>&lt;b-form-radio&gt;</code> sub component.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Radios using &lt;code&gt;options&lt;/code&gt;&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;radios1&quot;</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span> <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span> <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radioOpenions&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Radios using sub-components&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;radios2&quot;</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span> <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radioSubComponent&quot;</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio</span> <span class=hljs-attr>value</span>=<span class=hljs-string>&quot;first&quot;</span>&gt;</span>Toggle this custom radio<span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio</span> <span class=hljs-attr>value</span>=<span class=hljs-string>&quot;second&quot;</span>&gt;</span>Or toggle this other custom radio<span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio</span> <span class=hljs-attr>value</span>=<span class=hljs-string>&quot;third&quot;</span> <span class=hljs-attr>disabled</span>&gt;</span>This one is Disabled<span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio</span> <span class=hljs-attr>:value</span>=<span class=hljs-string>&quot;{fourth: 4}&quot;</span>&gt;</span>This is the 4th radio<span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;mt-3&quot;</span>&gt;</span>\\n      Selected: <span class=hljs-tag>&lt;<span class=hljs-name>strong</span>&gt;</span>{{ selected }}<span class=hljs-tag>&lt;/<span class=hljs-name>strong</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\\n\\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\\n  data () {\\n    <span class=hljs-keyword>return</span> {\\n      <span class=hljs-attr>selected</span>: <span class=hljs-string>&apos;first&apos;</span>,\\n      <span class=hljs-attr>options</span>: [\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Toggle this custom radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;first&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Or toggle this other custom radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;second&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;This one is Disabled&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;third&apos;</span>, <span class=hljs-attr>disabled</span>: <span class=hljs-literal>true</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;This is the 4th radio&apos;</span>, <span class=hljs-attr>value</span>: {<span class=hljs-attr>fourth</span>: <span class=hljs-number>4</span>} }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\\n\\n<span class=hljs-comment>&lt;!-- form-radio-1.vue --&gt;</span>\\n</pre> <p>Feel free to mix and match <code>options</code> prop and <code>&lt;b-form-radio&gt;</code> in <code>&lt;b-form-radio-group&gt;</code>. Manually placed <code>&lt;b-form-radio&gt;</code> inputs will appear <em>below</em> any radio inputs generated by the <code>options</code> prop. To have them apper <em>above</em> the inputs generated by <code>options</code>, place them in the named slot <code>first</code>.</p> <h2 id=options>Options</h2> <p>Please see options in <a href=/docs/components/form-select><code>&lt;b-form-select&gt;</code></a> docs for details on passing options (value array) to <code>&lt;b-form-radio-group&gt;</code>.</p> <h2 id=size>Size</h2> <p>Control the size of the radio text by setting the prop <code>size</code> to either <code>sm</code> for small or <code>lg</code> for large.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Small size radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;sm&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radiosSm&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Default size radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radiosMd&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Large size radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;lg&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radiosLg&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;mt-4&quot;</span>&gt;</span>\\n      Selected: <span class=hljs-tag>&lt;<span class=hljs-name>strong</span>&gt;</span>{{ selected }}<span class=hljs-tag>&lt;/<span class=hljs-name>strong</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\\n\\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\\n  data () {\\n    <span class=hljs-keyword>return</span> {\\n      <span class=hljs-attr>selected</span>: <span class=hljs-string>&apos;first&apos;</span>,\\n      <span class=hljs-attr>options</span>: [\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;First radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;first&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Second radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;second&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Third radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;third&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\\n\\n<span class=hljs-comment>&lt;!-- form-radio-size-1.vue --&gt;</span>\\n</pre> <p><strong>Note:</strong> <em>the current Bootstrap V4.beta CSS does not correctly style the size of the radio indicator.</em></p> <h2 id=inline-or-stacked>Inline or stacked</h2> <p>By default <code>&lt;b-form-radio&gt;</code> generates inline radio inputs. Set the prop <code>stacked</code> to make the radios appear one over the other.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Inline radios (default)&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radioInline&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Stacked radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>stacked</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radiosStacked&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-radio-group</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;mt-3&quot;</span>&gt;</span>\\n      Selected: <span class=hljs-tag>&lt;<span class=hljs-name>strong</span>&gt;</span>{{ selected }}<span class=hljs-tag>&lt;/<span class=hljs-name>strong</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\\n\\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\\n  data () {\\n    <span class=hljs-keyword>return</span> {\\n      <span class=hljs-attr>selected</span>: <span class=hljs-string>&apos;first&apos;</span>,\\n      <span class=hljs-attr>options</span>: [\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;First radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;first&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Second radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;second&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Third radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;third&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\\n\\n<span class=hljs-comment>&lt;!-- form-radio-stacked-1.vue --&gt;</span>\\n</pre> <h2 id=button-style-radios>Button style radios</h2> <p>Render radios with the look of buttons by setting the prop <code>buttons</code>. Set the button variant by setting the <code>button-variant</code> prop to one of the standard Bootstrap button variants (see <a href=./button><code>&lt;b-button&gt;</code></a> for supported variants). The default <code>button-variant</code> is <code>secondary</code>.</p> <p>The <code>buttons</code> prop has precedence over <code>plain</code>, and <code>button-variant</code> has no effect if <code>buttons</code> is not set.</p> <p>Button style radios will have the class <code>.active</code> automatically applied to their label when they are in the checked state.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Button style radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;btnradios1&quot;</span>\\n                          <span class=hljs-attr>buttons</span>\\n                          <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radiosBtnDefault&quot;</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Button style radios with &lt;code&gt;outline-primary&lt;/code&gt; variant and size &lt;code&gt;lg&lt;/code&gt;&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;btnradios2&quot;</span>\\n                          <span class=hljs-attr>buttons</span>\\n                          <span class=hljs-attr>button-variant</span>=<span class=hljs-string>&quot;outline-primary&quot;</span>\\n                          <span class=hljs-attr>size</span>=<span class=hljs-string>&quot;lg&quot;</span>\\n                          <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radioBtnOutline&quot;</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Stacked button style radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>id</span>=<span class=hljs-string>&quot;btnradios3&quot;</span>\\n                          <span class=hljs-attr>buttons</span>\\n                          <span class=hljs-attr>stacked</span>\\n                          <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;radioBtnStacked&quot;</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\\n\\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\\n  data () {\\n    <span class=hljs-keyword>return</span> {\\n      <span class=hljs-attr>selected</span>: <span class=hljs-string>&apos;radio1&apos;</span>,\\n      <span class=hljs-attr>options</span>: [\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Radio 1&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;radio1&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Radio 3&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;radio2&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Radio 3 (disabled)&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;radio3&apos;</span>, <span class=hljs-attr>disabled</span>: <span class=hljs-literal>true</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Radio 4&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;radio4&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\\n\\n<span class=hljs-comment>&lt;!-- form-radio-buttons.vue --&gt;</span>\\n</pre> <p><strong>Note:</strong> <code>&lt;b-form-radio-group&gt;</code> uses the HTML attribute <code>data-toggle=&quot;buttons&quot;</code> to apply the button styling to the radios. This can cause a potential conflict if you are including Bootstrap V4&apos;s jQuery code in your project for other purposes. To get around this, you will need to exclude the Bootstrap V4 jQuery buttons plugin, and include only the other Bootstrap V4 jQuery plugins you reqwuire.</p> <h2 id=non-custom-style-radio-inputs-plain->Non custom style radio inputs (plain)</h2> <p>You can have <code>b-form-radio</code> render a browser native radio input by setting the <code>plain</code> prop.</p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Plain inline radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>plain</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;plainInline&quot;</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n\\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-group</span> <span class=hljs-attr>label</span>=<span class=hljs-string>&quot;Plain stacked radios&quot;</span>&gt;</span>\\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-radio-group</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>&quot;selected&quot;</span>\\n                          <span class=hljs-attr>:options</span>=<span class=hljs-string>&quot;options&quot;</span>\\n                          <span class=hljs-attr>plain</span>\\n                          <span class=hljs-attr>stacked</span>\\n                          <span class=hljs-attr>name</span>=<span class=hljs-string>&quot;plainStacked&quot;</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-form-group</span>&gt;</span>\\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\\n\\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\\n  data () {\\n    <span class=hljs-keyword>return</span> {\\n      <span class=hljs-attr>selected</span>: <span class=hljs-string>&apos;first&apos;</span>,\\n      <span class=hljs-attr>options</span>: [\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;First radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;first&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Second radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;second&apos;</span> },\\n        { <span class=hljs-attr>text</span>: <span class=hljs-string>&apos;Third radio&apos;</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>&apos;third&apos;</span> }\\n      ]\\n    }\\n  }\\n}\\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\\n\\n<span class=hljs-comment>&lt;!-- form-radio-plain-1.vue --&gt;</span>\\n</pre> <p><strong>Note:</strong> <code>plain</code> will have no effect if <code>buttons</code> is set.</p> <h2 id=contextual-states>Contextual States</h2> <p>Bootstrap includes validation styles for <code>valid</code> and <code>invalid</code> states on most form controls.</p> <p>Generally speaking, you&#x2019;ll want to use a particular state for specific types of feedback:</p> <ul> <li><code>&apos;invalid&apos;</code> is great for when there&#x2019;s a blocking or required field. A user must fill in this field properly to submit the form.</li> <li><code>&apos;valid&apos;</code> is ideal for situations when you have per-field validation throughout a form and want to encourage a user through the rest of the fields.</li> <li><code>null</code> Displays no validation state</li> </ul> <p>To apply one of the contextual state icons on <code>&lt;b-form-radio&gt;</code>, set the <code>state</code> prop to <code>&apos;invalid&apos;</code> (or <code>false</code>), <code>&apos;valid&apos;</code> (or <code>true</code>), or <code>null</code>.</p> <p><strong>Note:</strong> contextual state is not supported for radios rendered in buttons mode.</p> <h3 id=conveying-contextual-validation-state-to-assistive-technologies-and-colorblind-users->Conveying contextual validation state to assistive technologies and colorblind users:</h3> <p>Using these contextual states to denote the state of a form control only provides a visual, color-based indication, which will not be conveyed to users of assistive technologies - such as screen readers - or to colorblind users.</p> <p>Ensure that an alternative indication of state is also provided. For instance, you could include a hint about state in the form control&apos;s <code>&lt;label&gt;</code> text itself, or by providing an additional help text block (i.e. <code>&lt;b-form-feedbck&gt;</code>). Specifically for assistive technologies, invalid form controls can also be assigned an <code>aria-invalid=&quot;true&quot;</code> attribute (see below).</p> <h3 id=aria-aria-invalid-attribute>ARIA <code>aria-invalid</code> attribute</h3> <p>When <code>&lt;b-form-radio&gt;</code> has an invalid contextual state (i.e. <code>invalid</code>) you may also want to set the <code>&lt;b-form-radio&gt;</code> prop <code>aria-invalid</code> to <code>true</code>.</p> <p>Supported <code>invalid</code> values are:</p> <ul> <li><code>false</code> (default) No errors detected</li> <li><code>true</code> The value has failed validation.</li> </ul> <p><code>aria-invalid</code> is automatically set if <code>state</code> is <code>invalid</code>.</p> <h2 id=radio-component-aliases>Radio component aliases</h2> <ul> <li><code>&lt;b-form-radio-group&gt;</code> can be used by the shorter alias <code>&lt;b-radio-group&gt;</code>.</li> <li><code>&lt;b-form-radio&gt;</code> can be used by the shorter alias of <code>&lt;b-radio&gt;</code>.</li> </ul> <h2 id=component-reference>Component Reference</h2> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/form-radio/README.md\n// module id = U29p\n// module chunks = 42"],"sourceRoot":""}