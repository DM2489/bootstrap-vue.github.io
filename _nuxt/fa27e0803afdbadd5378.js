(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{363:function(s,a){s.exports='<h1 id="input-groups">Input Groups</h1>\n<blockquote>\n<p>Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs.</p>\n</blockquote>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Using props --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;$&quot;</span> <span class="hljs-attr">append</span>=<span class="hljs-string">&quot;.00&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Using slots --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-text</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;append&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">strong</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;</span>!<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Using components --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Username&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-groups-1.vue --&gt;</span>\n</pre>\n<h2 id="usage">Usage</h2>\n<p>You can attach addons using either props, named slots or components.</p>\n<h3 id="using-prepend-and-append-props">Using <code>prepend</code> and <code>append</code> props</h3>\n<p>Values will be internally wrapped by a <code>&lt;b-input-group-text&gt;</code> to display correctly.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;$&quot;</span> <span class="hljs-attr">append</span>=<span class="hljs-string">&quot;.00&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-using-props.vue --&gt;</span>\n</pre>\n<h3 id="using-named-slots">Using named slots</h3>\n<p>if you want better control over addons, you can use <code>prepend</code> and <code>append</code> slots instead.</p>\n<p>This slots will be wrapped by <code>&lt;b-input-group-prepend|append&gt;</code> to display correctly.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Username&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;append&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action A<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action B<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-using-slots.vue --&gt;</span>\n</pre>\n<h3 id="using-components">Using components</h3>\n<p>Use the <code>&lt;b-input-group-prepend&gt;</code> or <code>&lt;b-input-group-append&gt;</code> to add arbitrary addons wherever you like,\nand use these components to group buttons in your input group.\nSingle buttons must always be wrapped in components for proper styling.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-info&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.00&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-addons-placement.vue --&gt;</span>\n</pre>\n<h2 id="checkbox-and-radio-addons">Checkbox and radio addons</h2>\n<p>Place any native checkbox or radio within an input group&#x2019;s addon instead of text.</p>\n<p><strong>Note:</strong> you must use native radio and checkbox inputs, as <code>&lt;b-form-radio&gt;</code> and\n<code>&lt;b-form-checkbox&gt;</code> include additional markup not required in input groups.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Checkbox for following text input&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with checkbox&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Radio for following text input&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with radio button&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-checks-radios.vue --&gt;</span>\n</pre>\n<h2 id="dropdowns">Dropdowns</h2>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;prepend&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 2&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action A<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action B<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;append&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 2&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action C<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action D<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-dropdown.vue --&gt;</span>\n</pre>\n<h2 id="multiple-addons">Multiple addons</h2>\n<p>Multiple add-ons are supported and can be mixed with checkbox and radio input versions.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;$&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Checkbox for following text input&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with checkbox&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-multiple.vue --&gt;</span>\n</pre>\n<h2 id="control-sizing">Control sizing</h2>\n<p>Set height using the <code>size</code> prop to <code>sm</code> or <code>lg</code> for small or large respectively. There\nis no need to set size on the individual inputs or buttons. Note however, you will be\nrequired to also set the size on dropdowns.</p>\n<p>To control width, place the input inside standard Bootstrap grid column.</p>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;size in [&apos;sm&apos;,&apos;&apos;,&apos;lg&apos;]&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;size&quot;</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;size&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Label&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-btn</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-btn</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n\n<span class="hljs-comment">&lt;!-- input-group-size.vue --&gt;</span>\n</pre>\n<h2 id="contextual-states">Contextual states</h2>\n<p>Bootstrap currently <strong>does not</strong> support contextual state (i.e. valid or invalid) on\ninput groups.</p>\n<h2 id="component-reference">Component Reference</h2>\n'}}]);