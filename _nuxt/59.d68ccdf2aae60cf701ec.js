webpackJsonp([59],{"ChR+":function(s,a){s.exports="<h1 id=sizing-props-and-classes>Sizing props and classes</h1> <blockquote> <p>Bootstrap V4 CSS provdes several classes that control the sizing of elements, of which some of these have been translated into props on components.</p> </blockquote> <h2 id=component-size-prop>Component <code>size</code> prop</h2> <p>Various components allow for an optional size (via the <code>size</code> prop). Below are the sizes supported via the default Bootsrap V4 CSS.</p> <p>Available Sizes:</p> <ul> <li><code>sm</code> small</li> <li><code>lg</code> large</li> </ul> <p>When no size is specified, this results in normal sized appearance (usually referend to as <code>md</code>).</p> <p>These size values will be translated into the appropriate Bootstrap CSS class, depending on the component used on, such as <code>.btn-&lt;size&gt;</code> for buttons, <code>.modal-&lt;size&gt;</code> for modal, <code>.form-control-&lt;size&gt;</code> for form elements, <code>.pagination-&lt;size&gt;</code> for pagination buttons, etc.</p> <h2 id=breakpoint-sizes>Breakpoint sizes</h2> <p>Bootstrap V4 also includes viewport breakpoint sizes: <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code>. which refer to the width of the user&apos;s view port.</p> <p>For details on breakpoint sizes, please check the <a href=/docs/layout/ >Layout and Grid</a> documentation.</p> <h2 id=sizing-utility-classes>Sizing utility classes</h2> <p>Easily make an element as wide or as tall (relative to its parent) with the width and height utilities classes.</p> <p>Width and height utilities are generated from the <code>$sizes</code> Sass map in Bootstrap&apos;s <code>_variables.scss</code>. Includes support for <code>25%</code>, <code>50%</code>, <code>75%</code>, and <code>100%</code> by default. Modify those values as you need to generate different utilities here.</p> <p><strong>Widths:</strong></p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;text-center&quot;</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;w-25 p-3 mb-1 bg-secondary&quot;</span>&gt;</span>Width 25%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;w-50 p-3 mb-1 bg-secondary&quot;</span>&gt;</span>Width 50%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;w-75 p-3 mb-1 bg-secondary&quot;</span>&gt;</span>Width 75%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;w-100 p-3 bg-secondary&quot;</span>&gt;</span>Width 100%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- widths.vue --&gt;</span>\n</pre> <p><strong>Heights:</strong></p> <pre class=hljs><span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>style</span>=<span class=hljs-string>&quot;height: 100px; background-color: rgba(255,0,0,0.1);&quot;</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;h-25 d-inline-block&quot;</span> <span class=hljs-attr>style</span>=<span class=hljs-string>&quot;width: 120px; background-color: rgba(0,0,255,.1)&quot;</span>&gt;</span>Height 25%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;h-50 d-inline-block&quot;</span> <span class=hljs-attr>style</span>=<span class=hljs-string>&quot;width: 120px; background-color: rgba(0,0,255,.1)&quot;</span>&gt;</span>Height 50%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;h-75 d-inline-block&quot;</span> <span class=hljs-attr>style</span>=<span class=hljs-string>&quot;width: 120px; background-color: rgba(0,0,255,.1)&quot;</span>&gt;</span>Height 75%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;h-100 d-inline-block&quot;</span> <span class=hljs-attr>style</span>=<span class=hljs-string>&quot;width: 120px; background-color: rgba(0,0,255,.1)&quot;</span>&gt;</span>Height 100%<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- heights.vue --&gt;</span>\n</pre> <p><strong>Max width and height:</strong></p> <p>You can also use <code>mw-100</code> (<code>max-width: 100%;</code>) and <code>mh-100</code> (<code>max-height: 100%;</code>) utilities as needed.</p> <h2 id=additional-resources>Additional Resources</h2> <p>Refer to <a href=http://getbootstrap.com/ >Bootstrap V4</a> official documentation site for more information.</p> "}});
//# sourceMappingURL=59.d68ccdf2aae60cf701ec.js.map